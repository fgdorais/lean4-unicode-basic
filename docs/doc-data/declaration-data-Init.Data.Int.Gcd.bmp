{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.pow_lcm_pow\"><span class=\"name\">Int</span>.<span class=\"name\">pow_lcm_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.pow_lcm_pow","kind":"theorem","line":658,"name":"Int.pow_lcm_pow","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L658-L659"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_left_eq_mul_of_lcm_eq_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left_left_eq_mul_of_lcm_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_left_eq_mul_of_lcm_eq_mul","kind":"theorem","line":654,"name":"Int.lcm_mul_left_left_eq_mul_of_lcm_eq_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L654-L656"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_left_eq_mul_of_lcm_eq_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right_left_eq_mul_of_lcm_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_left_eq_mul_of_lcm_eq_mul","kind":"theorem","line":650,"name":"Int.lcm_mul_right_left_eq_mul_of_lcm_eq_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L650-L652"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_right_eq_mul_of_lcm_eq_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left_right_eq_mul_of_lcm_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_right_eq_mul_of_lcm_eq_mul","kind":"theorem","line":646,"name":"Int.lcm_mul_left_right_eq_mul_of_lcm_eq_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L646-L648"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_right_eq_mul_of_lcm_eq_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right_right_eq_mul_of_lcm_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_right_eq_mul_of_lcm_eq_mul","kind":"theorem","line":642,"name":"Int.lcm_mul_right_right_eq_mul_of_lcm_eq_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L642-L644"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul_self_right_iff_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_mul_self_right_iff_dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul_self_right_iff_dvd_mul","kind":"theorem","line":639,"name":"Int.lcm_dvd_mul_self_right_iff_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L639-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul_self_left_iff_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_mul_self_left_iff_dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">k</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul_self_left_iff_dvd_mul","kind":"theorem","line":635,"name":"Int.lcm_dvd_mul_self_left_iff_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L635-L637"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_dvd_mul_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left_dvd_mul_lcm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">m</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_dvd_mul_lcm","kind":"theorem","line":632,"name":"Int.lcm_mul_left_dvd_mul_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L632-L633"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_dvd_mul_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right_dvd_mul_lcm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">k</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">k</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">k</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_dvd_mul_lcm","kind":"theorem","line":629,"name":"Int.lcm_mul_right_dvd_mul_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L629-L630"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_one_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_one_iff","kind":"theorem","line":625,"name":"Int.lcm_eq_one_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L625-L627"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_mul_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_mul_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_mul_iff","kind":"theorem","line":622,"name":"Int.lcm_eq_mul_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L622-L623"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_lcm_self_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_left_left","kind":"theorem","line":619,"name":"Int.lcm_lcm_self_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L619-L620"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_lcm_self_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_left_right","kind":"theorem","line":616,"name":"Int.lcm_lcm_self_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L616-L617"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_lcm_self_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_right_right","kind":"theorem","line":613,"name":"Int.lcm_lcm_self_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L613-L614"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_lcm_self_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_lcm_self_right_left","kind":"theorem","line":610,"name":"Int.lcm_lcm_self_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L610-L611"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_right","kind":"theorem","line":607,"name":"Int.lcm_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L607-L608"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right_left","kind":"theorem","line":604,"name":"Int.lcm_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L604-L605"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_right","kind":"theorem","line":601,"name":"Int.lcm_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L601-L602"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left_left","kind":"theorem","line":598,"name":"Int.lcm_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L598-L599"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_right","kind":"theorem","line":595,"name":"Int.lcm_eq_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L595-L596"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_left","kind":"theorem","line":592,"name":"Int.lcm_eq_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L592-L593"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_natAbs_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_right","kind":"theorem","line":589,"name":"Int.lcm_eq_natAbs_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L589-L590"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_natAbs_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_left","kind":"theorem","line":586,"name":"Int.lcm_eq_natAbs_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L586-L587"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_right_right","kind":"theorem","line":583,"name":"Int.lcm_dvd_lcm_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L583-L584"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_left_right","kind":"theorem","line":580,"name":"Int.lcm_dvd_lcm_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L580-L581"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_right_left","kind":"theorem","line":577,"name":"Int.lcm_dvd_lcm_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L577-L578"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_mul_left_left","kind":"theorem","line":574,"name":"Int.lcm_dvd_lcm_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L574-L575"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_of_dvd_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_of_dvd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_of_dvd_right","kind":"theorem","line":571,"name":"Int.lcm_dvd_lcm_of_dvd_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L571-L572"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_of_dvd_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_lcm_of_dvd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_lcm_of_dvd_left","kind":"theorem","line":568,"name":"Int.lcm_dvd_lcm_of_dvd_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L568-L569"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_ediv\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_ediv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_ediv","kind":"theorem","line":563,"name":"Int.lcm_ediv","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L563-L566"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span> → <span class=\"fn\">↑<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_iff","kind":"theorem","line":556,"name":"Int.lcm_eq_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L556-L561"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_pos_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_pos_iff","kind":"theorem","line":553,"name":"Int.lcm_pos_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L553-L554"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_zero_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_zero_iff","kind":"theorem","line":550,"name":"Int.lcm_eq_zero_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L550-L551"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.eq_zero_of_lcm_eq_zero\"><span class=\"name\">Int</span>.<span class=\"name\">eq_zero_of_lcm_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.eq_zero_of_lcm_eq_zero","kind":"theorem","line":547,"name":"Int.eq_zero_of_lcm_eq_zero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L547-L548"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_pos\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> → <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_pos","kind":"theorem","line":544,"name":"Int.lcm_pos","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L544-L545"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_ne_zero\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_ne_zero","kind":"theorem","line":541,"name":"Int.lcm_ne_zero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L541-L542"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_right","kind":"theorem","line":538,"name":"Int.lcm_mul_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L538-L539"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_left","kind":"theorem","line":535,"name":"Int.lcm_mul_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L535-L536"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_assoc\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">c</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_assoc","kind":"theorem","line":533,"name":"Int.lcm_assoc","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L533-L533"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_right_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_right_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_right_iff_dvd","kind":"theorem","line":530,"name":"Int.lcm_eq_right_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L530-L531"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_left_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_left_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_left_iff_dvd","kind":"theorem","line":526,"name":"Int.lcm_eq_left_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L526-L528"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_right_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_natAbs_right_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_right_iff_dvd","kind":"theorem","line":523,"name":"Int.lcm_eq_natAbs_right_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L523-L524"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_left_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_natAbs_left_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_left_iff_dvd","kind":"theorem","line":520,"name":"Int.lcm_eq_natAbs_left_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L520-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_iff\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_iff","kind":"theorem","line":517,"name":"Int.lcm_dvd_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L517-L518"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.coe_lcm_dvd_iff\"><span class=\"name\">Int</span>.<span class=\"name\">coe_lcm_dvd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.coe_lcm_dvd_iff","kind":"theorem","line":513,"name":"Int.coe_lcm_dvd_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L513-L515"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd","kind":"theorem","line":510,"name":"Int.lcm_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L510-L511"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.coe_lcm_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">coe_lcm_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.coe_lcm_dvd","kind":"theorem","line":507,"name":"Int.coe_lcm_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L507-L508"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.le_lcm_right\"><span class=\"name\">Int</span>.<span class=\"name\">le_lcm_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.le_lcm_right","kind":"theorem","line":504,"name":"Int.le_lcm_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L504-L505"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.le_lcm_left\"><span class=\"name\">Int</span>.<span class=\"name\">le_lcm_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.le_lcm_left","kind":"theorem","line":501,"name":"Int.le_lcm_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L501-L502"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_le_lcm_right\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_le_lcm_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_le_lcm_right","kind":"theorem","line":498,"name":"Int.natAbs_le_lcm_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L498-L499"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_le_lcm_left\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_le_lcm_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_le_lcm_left","kind":"theorem","line":495,"name":"Int.natAbs_le_lcm_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L495-L496"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_natCast_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_natCast_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">a</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Lcm.html#Nat.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_natCast_natCast","kind":"theorem","line":491,"name":"Int.lcm_natCast_natCast","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L491-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_neg\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_neg","kind":"theorem","line":489,"name":"Int.lcm_neg","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L489-L489"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.neg_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">neg_lcm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.neg_lcm","kind":"theorem","line":488,"name":"Int.neg_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L488-L488"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_self\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_self","kind":"theorem","line":486,"name":"Int.lcm_self","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L486-L486"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_zero_right","kind":"theorem","line":484,"name":"Int.lcm_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L484-L484"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_zero_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_zero_left","kind":"theorem","line":483,"name":"Int.lcm_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L483-L483"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_one_right\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_one_right","kind":"theorem","line":481,"name":"Int.lcm_one_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L481-L481"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_one_left\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_one_left","kind":"theorem","line":480,"name":"Int.lcm_one_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L480-L480"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_zero\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_zero","kind":"theorem","line":478,"name":"Int.lcm_zero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L478-L478"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.zero_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">zero_lcm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.zero_lcm","kind":"theorem","line":477,"name":"Int.zero_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L477-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_one\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_one","kind":"theorem","line":475,"name":"Int.lcm_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L475-L475"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.one_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">one_lcm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.one_lcm","kind":"theorem","line":474,"name":"Int.one_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L474-L474"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_comm\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_comm","kind":"theorem","line":472,"name":"Int.lcm_comm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L472-L472"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_mul\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_le_natAbs_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_mul","kind":"theorem","line":469,"name":"Int.gcd_le_natAbs_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L469-L470"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_le_natAbs_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_le_natAbs_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_le_natAbs_mul","kind":"theorem","line":466,"name":"Int.lcm_le_natAbs_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L466-L467"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_lcm_right\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_lcm_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_lcm_right","kind":"theorem","line":463,"name":"Int.dvd_lcm_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L463-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_lcm_left\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_lcm_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_lcm_left","kind":"theorem","line":460,"name":"Int.dvd_lcm_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L460-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_dvd_lcm_right\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_dvd_lcm_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_dvd_lcm_right","kind":"theorem","line":458,"name":"Int.natAbs_dvd_lcm_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L458-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_dvd_lcm_left\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_dvd_lcm_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_dvd_lcm_left","kind":"theorem","line":457,"name":"Int.natAbs_dvd_lcm_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L457-L457"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_mul","kind":"theorem","line":454,"name":"Int.gcd_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L454-L455"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_mul","kind":"theorem","line":451,"name":"Int.lcm_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L451-L452"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_mul\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_natAbs_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_mul","kind":"theorem","line":449,"name":"Int.gcd_dvd_natAbs_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L449-L449"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_dvd_natAbs_mul\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_dvd_natAbs_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_dvd_natAbs_mul","kind":"theorem","line":448,"name":"Int.lcm_dvd_natAbs_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L448-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_mul_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_mul_gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_mul_gcd","kind":"theorem","line":445,"name":"Int.lcm_mul_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L445-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_lcm\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_lcm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_lcm","kind":"theorem","line":442,"name":"Int.gcd_mul_lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L442-L443"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_mul_div\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_mul_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_mul_div","kind":"theorem","line":439,"name":"Int.lcm_eq_mul_div","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L439-L440"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_lcm_natAbs\"><span class=\"name\">Int</span>.<span class=\"name\">lcm_eq_natAbs_lcm_natAbs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.lcm\">lcm</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Lcm.html#Nat.lcm\">lcm</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.lcm_eq_natAbs_lcm_natAbs","kind":"theorem","line":437,"name":"Int.lcm_eq_natAbs_lcm_natAbs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L437-L437"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.lcm\"><span class=\"name\">Int</span>.<span class=\"name\">lcm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Computes the least common multiple of two integers as a natural number. The LCM of two integers is\nthe smallest natural number that's evenly divisible by the absolute values of both.\n\nExamples:\n * `Int.lcm 9 6 = 18`\n * `Int.lcm 9 (-6) = 18`\n * `Int.lcm 9 3 = 9`\n * `Int.lcm 9 (-3) = 9`\n * `Int.lcm 0 3 = 0`\n * `Int.lcm (-3) 0 = 0`\n","docLink":"./Init/Data/Int/Gcd.html#Int.lcm","kind":"def","line":422,"name":"Int.lcm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L422-L435"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.pow_dvd_pow_iff\"><span class=\"name\">Int</span>.<span class=\"name\">pow_dvd_pow_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.pow_dvd_pow_iff","kind":"theorem","line":417,"name":"Int.pow_dvd_pow_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L417-L418"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.pow_gcd_pow\"><span class=\"name\">Int</span>.<span class=\"name\">pow_gcd_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.pow_gcd_pow","kind":"theorem","line":414,"name":"Int.pow_gcd_pow","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L414-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ediv_gcd_ediv_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">i </span><span class=\"fn\">j</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">j</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">j</span>)</span></span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">i</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">j</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd","kind":"theorem","line":409,"name":"Int.gcd_ediv_gcd_ediv_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L409-L412"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ediv_gcd_ediv_gcd_of_ne_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_right","kind":"theorem","line":404,"name":"Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L404-L407"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ediv_gcd_ediv_gcd_of_ne_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_left","kind":"theorem","line":399,"name":"Int.gcd_ediv_gcd_ediv_gcd_of_ne_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L399-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.pow_gcd_pow_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">pow_gcd_pow_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.pow_gcd_pow_of_gcd_eq_one","kind":"theorem","line":396,"name":"Int.pow_gcd_pow_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L396-L397"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_pow_right_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_pow_right_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_pow_right_of_gcd_eq_one","kind":"theorem","line":393,"name":"Int.gcd_pow_right_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L393-L394"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_pow_left_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_pow_left_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_pow_left_of_gcd_eq_one","kind":"theorem","line":390,"name":"Int.gcd_pow_left_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L390-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_left_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_left_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_left_of_gcd_eq_one","kind":"theorem","line":387,"name":"Int.gcd_mul_left_left_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L387-L388"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_left_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_left_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_left_of_gcd_eq_one","kind":"theorem","line":384,"name":"Int.gcd_mul_right_left_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L384-L385"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_right_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_right_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_right_of_gcd_eq_one","kind":"theorem","line":381,"name":"Int.gcd_mul_left_right_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L381-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_right_of_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_right_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_right_of_gcd_eq_one","kind":"theorem","line":378,"name":"Int.gcd_mul_right_right_of_gcd_eq_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L378-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_one_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> → <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">1</span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_one_iff","kind":"theorem","line":375,"name":"Int.gcd_eq_one_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L375-L376"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_gcd_mul_gcd_iff_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_gcd_mul_gcd_iff_dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_gcd_mul_gcd_iff_dvd_mul","kind":"theorem","line":372,"name":"Int.dvd_gcd_mul_gcd_iff_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L372-L373"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_mul_gcd_iff_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_mul_gcd_iff_dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_mul_gcd_iff_dvd_mul","kind":"theorem","line":369,"name":"Int.dvd_mul_gcd_iff_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L369-L370"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_gcd_mul_iff_dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_gcd_mul_iff_dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">n </span><span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_gcd_mul_iff_dvd_mul","kind":"theorem","line":366,"name":"Int.dvd_gcd_mul_iff_dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L366-L367"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_dvd_mul_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_dvd_mul_gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_dvd_mul_gcd","kind":"theorem","line":363,"name":"Int.gcd_mul_left_dvd_mul_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L363-L364"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_dvd_mul_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_dvd_mul_gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_dvd_mul_gcd","kind":"theorem","line":360,"name":"Int.gcd_mul_right_dvd_mul_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L360-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_mul\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">c₁</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <a href=\"./Init/Core.html#Exists\">∃</a> <a href=\"./Init/Core.html#Exists\">(</a><span class=\"fn\">c₂</span> <a href=\"./Init/Core.html#Exists\">:</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a><a href=\"./Init/Core.html#Exists\">)</a><a href=\"./Init/Core.html#Exists\">,</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c₂</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_mul","kind":"theorem","line":353,"name":"Int.dvd_mul","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L353-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvdProdDvdOfDvdProd\"><span class=\"name\">Int</span>.<span class=\"name\">dvdProdDvdOfDvdProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">d</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">n'</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Subtype\">}</a> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Prelude.html#Prod.fst\">fst</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Prelude.html#Prod.snd\">snd</a></span>.<a href=\"./Init/Prelude.html#Subtype.val\">val</a></span> <a href=\"./Init/Prelude.html#Subtype\">}</a></div></div>","info":{"doc":"Represent a divisor of `m * n` as a product of a divisor of `m` and a divisor of `n`. ","docLink":"./Init/Data/Int/Gcd.html#Int.dvdProdDvdOfDvdProd","kind":"def","line":340,"name":"Int.dvdProdDvdOfDvdProd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L340-L351"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">g</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> → <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> → <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">g</span></span></span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_iff","kind":"theorem","line":333,"name":"Int.gcd_eq_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L333-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_pos_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_pos_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_pos_iff","kind":"theorem","line":330,"name":"Int.gcd_pos_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L330-L331"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_zero_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_zero_iff","kind":"theorem","line":327,"name":"Int.gcd_eq_zero_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L327-L328"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_right_right_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_right_right_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_right_right_of_dvd","kind":"theorem","line":323,"name":"Int.gcd_sub_right_right_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L323-L325"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_left_right_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_left_right_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_left_right_of_dvd","kind":"theorem","line":319,"name":"Int.gcd_sub_left_right_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L319-L321"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_right_left_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_right_left_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_right_left_of_dvd","kind":"theorem","line":315,"name":"Int.gcd_sub_right_left_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L315-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_left_left_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_left_left_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_left_left_of_dvd","kind":"theorem","line":311,"name":"Int.gcd_sub_left_left_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L311-L313"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_self_sub_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_self_sub_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_self_sub_left","kind":"theorem","line":308,"name":"Int.gcd_self_sub_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L308-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_self_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_self_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_self_left","kind":"theorem","line":305,"name":"Int.gcd_sub_self_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L305-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_self_sub_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_self_sub_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_self_sub_right","kind":"theorem","line":302,"name":"Int.gcd_self_sub_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L302-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_self_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_self_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_self_right","kind":"theorem","line":299,"name":"Int.gcd_sub_self_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L299-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_sub_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_sub_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_sub_left","kind":"theorem","line":296,"name":"Int.gcd_mul_left_sub_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L296-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_sub_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_sub_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_sub_left","kind":"theorem","line":293,"name":"Int.gcd_mul_right_sub_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L293-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_left_left","kind":"theorem","line":290,"name":"Int.gcd_sub_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L290-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_right_left","kind":"theorem","line":287,"name":"Int.gcd_sub_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_sub_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_sub_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_sub_right","kind":"theorem","line":284,"name":"Int.gcd_mul_left_sub_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L284-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_sub_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_sub_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_sub_right","kind":"theorem","line":281,"name":"Int.gcd_mul_right_sub_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L281-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_left_right","kind":"theorem","line":278,"name":"Int.gcd_sub_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L278-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_sub_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_sub_mul_right_right","kind":"theorem","line":275,"name":"Int.gcd_sub_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L275-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_right_right_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_right_right_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_right_right_of_dvd","kind":"theorem","line":271,"name":"Int.gcd_add_right_right_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L271-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_left_right_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_left_right_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_left_right_of_dvd","kind":"theorem","line":267,"name":"Int.gcd_add_left_right_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L267-L269"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_right_left_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_right_left_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_right_left_of_dvd","kind":"theorem","line":263,"name":"Int.gcd_add_right_left_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L263-L265"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_left_left_of_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_left_left_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_left_left_of_dvd","kind":"theorem","line":259,"name":"Int.gcd_add_left_left_of_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L259-L261"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_self_add_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_self_add_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_self_add_left","kind":"theorem","line":256,"name":"Int.gcd_self_add_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L256-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_self_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_self_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_self_left","kind":"theorem","line":253,"name":"Int.gcd_add_self_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L253-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_self_add_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_self_add_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_self_add_right","kind":"theorem","line":250,"name":"Int.gcd_self_add_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_self_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_self_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_self_right","kind":"theorem","line":247,"name":"Int.gcd_add_self_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L247-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_add_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_add_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_add_left","kind":"theorem","line":244,"name":"Int.gcd_mul_left_add_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L244-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_add_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_add_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_add_left","kind":"theorem","line":241,"name":"Int.gcd_mul_right_add_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L241-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_left_left","kind":"theorem","line":238,"name":"Int.gcd_add_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L238-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_right_left","kind":"theorem","line":235,"name":"Int.gcd_add_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L235-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_add_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_add_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_add_right","kind":"theorem","line":232,"name":"Int.gcd_mul_left_add_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L232-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_add_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_add_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_add_right","kind":"theorem","line":229,"name":"Int.gcd_mul_right_add_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L229-L230"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_left_right","kind":"theorem","line":226,"name":"Int.gcd_add_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L226-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_add_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">m</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_add_mul_right_right","kind":"theorem","line":223,"name":"Int.gcd_add_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L223-L224"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_gcd_self_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_left_left","kind":"theorem","line":220,"name":"Int.gcd_gcd_self_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L220-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_gcd_self_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_left_right","kind":"theorem","line":217,"name":"Int.gcd_gcd_self_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L217-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_gcd_self_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_right_right","kind":"theorem","line":214,"name":"Int.gcd_gcd_self_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L214-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_gcd_self_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_gcd_self_right_left","kind":"theorem","line":211,"name":"Int.gcd_gcd_self_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L211-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_right","kind":"theorem","line":208,"name":"Int.gcd_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L208-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right_left","kind":"theorem","line":205,"name":"Int.gcd_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L205-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_right","kind":"theorem","line":202,"name":"Int.gcd_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L202-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left_left","kind":"theorem","line":199,"name":"Int.gcd_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L199-L200"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_left_eq_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_left_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">a' </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a'</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> → (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_left_eq_iff","kind":"theorem","line":196,"name":"Int.gcd_left_eq_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L196-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_right_eq_iff\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_right_eq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">b'</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b'</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> → (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b'</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_right_eq_iff","kind":"theorem","line":190,"name":"Int.gcd_right_eq_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L190-L194"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_right","kind":"theorem","line":187,"name":"Int.gcd_eq_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L187-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_left","kind":"theorem","line":184,"name":"Int.gcd_eq_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L184-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_natAbs_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_right","kind":"theorem","line":181,"name":"Int.gcd_eq_natAbs_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L181-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_natAbs_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_left","kind":"theorem","line":178,"name":"Int.gcd_eq_natAbs_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L178-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_right_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_mul_right_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_right_right","kind":"theorem","line":175,"name":"Int.gcd_dvd_gcd_mul_right_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L175-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_left_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_mul_left_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span>)</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_left_right","kind":"theorem","line":172,"name":"Int.gcd_dvd_gcd_mul_left_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L172-L173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_right_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_mul_right_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_right_left","kind":"theorem","line":169,"name":"Int.gcd_dvd_gcd_mul_right_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L169-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_left_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_mul_left_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_mul_left_left","kind":"theorem","line":166,"name":"Int.gcd_dvd_gcd_mul_left_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L166-L167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_of_dvd_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_of_dvd_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_of_dvd_right","kind":"theorem","line":163,"name":"Int.gcd_dvd_gcd_of_dvd_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L163-L164"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_of_dvd_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_gcd_of_dvd_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_gcd_of_dvd_left","kind":"theorem","line":160,"name":"Int.gcd_dvd_gcd_of_dvd_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L160-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ediv\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ediv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">c</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ediv","kind":"theorem","line":155,"name":"Int.gcd_ediv","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L155-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.eq_zero_of_gcd_eq_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">eq_zero_of_gcd_eq_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.eq_zero_of_gcd_eq_zero_right","kind":"theorem","line":152,"name":"Int.eq_zero_of_gcd_eq_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L152-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.eq_zero_of_gcd_eq_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">eq_zero_of_gcd_eq_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.eq_zero_of_gcd_eq_zero_left","kind":"theorem","line":149,"name":"Int.eq_zero_of_gcd_eq_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L149-L150"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.ediv_gcd_ne_zero_if_ne_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">ediv_gcd_ne_zero_if_ne_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.ediv_gcd_ne_zero_if_ne_zero_right","kind":"theorem","line":146,"name":"Int.ediv_gcd_ne_zero_if_ne_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L146-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.ediv_gcd_ne_zero_of_ne_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">ediv_gcd_ne_zero_of_ne_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.ediv_gcd_ne_zero_of_ne_zero_left","kind":"theorem","line":142,"name":"Int.ediv_gcd_ne_zero_of_ne_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L142-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_div_gcd_pos_of_ne_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_div_gcd_pos_of_ne_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_div_gcd_pos_of_ne_zero_right","kind":"theorem","line":139,"name":"Int.natAbs_div_gcd_pos_of_ne_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L139-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.natAbs_div_gcd_pos_of_ne_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">natAbs_div_gcd_pos_of_ne_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.natAbs_div_gcd_pos_of_ne_zero_left","kind":"theorem","line":136,"name":"Int.natAbs_div_gcd_pos_of_ne_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L136-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ne_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ne_zero_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ne_zero_right","kind":"theorem","line":133,"name":"Int.gcd_ne_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L133-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_ne_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_ne_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_ne_zero_left","kind":"theorem","line":130,"name":"Int.gcd_ne_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L130-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_pos_of_ne_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_pos_of_ne_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_pos_of_ne_zero_right","kind":"theorem","line":127,"name":"Int.gcd_pos_of_ne_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L127-L128"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_pos_of_ne_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_pos_of_ne_zero_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_pos_of_ne_zero_left","kind":"theorem","line":124,"name":"Int.gcd_pos_of_ne_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L124-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_right","kind":"theorem","line":121,"name":"Int.gcd_mul_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L121-L122"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_mul_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_mul_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">k</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_mul_left","kind":"theorem","line":118,"name":"Int.gcd_mul_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L118-L119"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_assoc\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_assoc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">c</span>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_assoc","kind":"theorem","line":116,"name":"Int.gcd_assoc","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L116-L116"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_right_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_right_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b </span><span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_right_iff_dvd","kind":"theorem","line":113,"name":"Int.gcd_eq_right_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L113-L114"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_left_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_left_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_left_iff_dvd","kind":"theorem","line":109,"name":"Int.gcd_eq_left_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L109-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_right_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_natAbs_right_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_right_iff_dvd","kind":"theorem","line":106,"name":"Int.gcd_eq_natAbs_right_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L106-L107"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_left_iff_dvd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_natAbs_left_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_left_iff_dvd","kind":"theorem","line":103,"name":"Int.gcd_eq_natAbs_left_iff_dvd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L103-L104"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_comm\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_comm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">a</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_comm","kind":"theorem","line":101,"name":"Int.gcd_comm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L101-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_gcd_iff\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_gcd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_gcd_iff","kind":"theorem","line":98,"name":"Int.dvd_gcd_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L98-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_coe_gcd_iff\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_coe_gcd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_coe_gcd_iff","kind":"theorem","line":94,"name":"Int.dvd_coe_gcd_iff","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L94-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">↑<span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_gcd","kind":"theorem","line":91,"name":"Int.dvd_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L91-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.dvd_coe_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">dvd_coe_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.dvd_coe_gcd","kind":"theorem","line":88,"name":"Int.dvd_coe_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L88-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_le_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_le_right","kind":"theorem","line":84,"name":"Int.gcd_le_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L84-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_le_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_le_left","kind":"theorem","line":80,"name":"Int.gcd_le_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L80-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_le_natAbs_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hb</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_right","kind":"theorem","line":77,"name":"Int.gcd_le_natAbs_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L77-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_le_natAbs_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ha</span> : <span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_le_natAbs_left","kind":"theorem","line":74,"name":"Int.gcd_le_natAbs_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L74-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_natCast_natCast\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_natCast_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">a</span>)</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_natCast_natCast","kind":"theorem","line":70,"name":"Int.gcd_natCast_natCast","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L70-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_neg\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">b</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_neg","kind":"theorem","line":68,"name":"Int.gcd_neg","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.neg_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">neg_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">a</span>).<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.neg_gcd","kind":"theorem","line":67,"name":"Int.neg_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_self\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_self","kind":"theorem","line":65,"name":"Int.gcd_self","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_zero_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_zero_right","kind":"theorem","line":63,"name":"Int.gcd_zero_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_zero_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_zero_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_zero_left","kind":"theorem","line":62,"name":"Int.gcd_zero_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_one_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_one_right","kind":"theorem","line":61,"name":"Int.gcd_one_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_one_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_one_left","kind":"theorem","line":60,"name":"Int.gcd_one_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_zero\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_zero","kind":"theorem","line":58,"name":"Int.gcd_zero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.zero_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">zero_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a> <span class=\"fn\">0</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.zero_gcd","kind":"theorem","line":57,"name":"Int.zero_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_one\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_one","kind":"theorem","line":55,"name":"Int.gcd_one","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.one_gcd\"><span class=\"name\">Int</span>.<span class=\"name\">one_gcd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a> <span class=\"fn\">1</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.one_gcd","kind":"theorem","line":54,"name":"Int.one_gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">b</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_right","kind":"theorem","line":51,"name":"Int.gcd_dvd_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span>)</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">a</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_left","kind":"theorem","line":48,"name":"Int.gcd_dvd_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L48-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_right\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_natAbs_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_right","kind":"theorem","line":46,"name":"Int.gcd_dvd_natAbs_right","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_left\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_dvd_natAbs_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_dvd_natAbs_left","kind":"theorem","line":45,"name":"Int.gcd_dvd_natAbs_left","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_gcd_natAbs\"><span class=\"name\">Int</span>.<span class=\"name\">gcd_eq_natAbs_gcd_natAbs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Gcd.html#Int.gcd\">gcd</a></span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span>.<a href=\"./Init/Data/Nat/Gcd.html#Nat.gcd\">gcd</a></span> <span class=\"fn\"><span class=\"fn\">n</span>.<a href=\"./Init/Data/Int/Basic.html#Int.natAbs\">natAbs</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Int/Gcd.html#Int.gcd_eq_natAbs_gcd_natAbs","kind":"theorem","line":43,"name":"Int.gcd_eq_natAbs_gcd_natAbs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Int/Gcd.html#Int.gcd\"><span class=\"name\">Int</span>.<span class=\"name\">gcd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Computes the greatest common divisor of two integers as a natural number. The GCD of two integers is\nthe largest natural number that evenly divides both. However, the GCD of a number and `0` is the\nnumber's absolute value.\n\nThis implementation uses `Nat.gcd`, which is overridden in both the kernel and the compiler to\nefficiently evaluate using arbitrary-precision arithmetic.\n\nExamples:\n* `Int.gcd 10 15 = 5`\n* `Int.gcd 10 (-15) = 5`\n* `Int.gcd (-6) (-9) = 3`\n* `Int.gcd 0 5 = 5`\n* `Int.gcd (-7) 0 = 7`\n","docLink":"./Init/Data/Int/Gcd.html#Int.gcd","kind":"def","line":25,"name":"Int.gcd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Int/Gcd.lean#L25-L41"}}],"imports":["Init.Data.Int.Basic","Init.Data.Nat.Gcd","Init.Data.Nat.Lcm","Init.Data.Int.DivMod.Lemmas","Init.Data.Int.Pow"],"instances":[],"name":"Init.Data.Int.Gcd"}