{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toContextExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toContextExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toContextExpr","kind":"def","line":183,"name":"Lean.Meta.Simp.Arith.Nat.toContextExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L183-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toLinearCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toLinearCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> (<a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\">LinearCnstr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>))</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toLinearCnstr?","kind":"def","line":173,"name":"Lean.Meta.Simp.Arith.Nat.toLinearCnstr?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L173-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">toLinearExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.toLinearExpr","kind":"def","line":164,"name":"Lean.Meta.Simp.Arith.Nat.toLinearExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L164-L171"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M\">M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.run","kind":"def","line":158,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L158-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearCnstr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearCnstr?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\">LinearCnstr</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearCnstr?","kind":"def","line":135,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearCnstr?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L135-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">toLinearExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M\">M</a> <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearExpr","kind":"opaque","line":98,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.toLinearExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L98-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.addAsVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">addAsVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M\">M</a> <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.addAsVar","kind":"def","line":89,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.addAsVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L89-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.M","kind":"def","line":85,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L85-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.vars","kind":"def","line":83,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.State.vars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.varMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">varMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.varMap","kind":"def","line":82,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.State.varMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varMap</span> : <span class=\"fn\"><a href=\"./Lean/Meta/KExprMap.html#Lean.Meta.KExprMap\">KExprMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State.mk","kind":"ctor","line":81,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">ToLinear</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.ToLinear.State","kind":"structure","line":81,"name":"Lean.Meta.Simp.Arith.Nat.ToLinear.State","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L81-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\">LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr.toArith","kind":"def","line":73,"name":"Lean.Meta.Simp.Arith.Nat.LinearCnstr.toArith","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L73-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr.toArith\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toArith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr.toArith","kind":"def","line":65,"name":"Lean.Meta.Simp.Arith.Nat.LinearExpr.toArith","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L65-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instToExprLinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\">LinearCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instToExprLinearCnstr","kind":"instance","line":60,"name":"Lean.Meta.Simp.Arith.Nat.instToExprLinearCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L60-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\">LinearCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr.toExpr","kind":"def","line":57,"name":"Lean.Meta.Simp.Arith.Nat.LinearCnstr.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instToExprLinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instToExprLinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">ToExpr</a> <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instToExprLinearExpr","kind":"instance","line":53,"name":"Lean.Meta.Simp.Arith.Nat.instToExprLinearExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L53-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\">LinearExpr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr.toExpr","kind":"def","line":44,"name":"Lean.Meta.Simp.Arith.Nat.LinearExpr.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L44-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.PolyExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">PolyExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.PolyExpr","kind":"def","line":42,"name":"Lean.Meta.Simp.Arith.Nat.PolyExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearCnstr","kind":"def","line":41,"name":"Lean.Meta.Simp.Arith.Nat.LinearCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">LinearExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.LinearExpr","kind":"def","line":40,"name":"Lean.Meta.Simp.Arith.Nat.LinearExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprPolyCnstr_lean</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean.repr","kind":"def","line":38,"name":"Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean.repr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprPolyCnstr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean","kind":"instance","line":38,"name":"Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExprCnstr_lean</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean.repr","kind":"def","line":37,"name":"Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean.repr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExprCnstr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean","kind":"instance","line":37,"name":"Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExpr_lean.repr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExpr_lean</span>.<span class=\"name\">repr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Format</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExpr_lean.repr","kind":"def","line":36,"name":"Lean.Meta.Simp.Arith.Nat.instReprExpr_lean.repr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExpr_lean\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Simp</span>.<span class=\"name\">Arith</span>.<span class=\"name\">Nat</span>.<span class=\"name\">instReprExpr_lean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Lean.Meta.Simp.Arith.Nat.instReprExpr_lean","kind":"instance","line":36,"name":"Lean.Meta.Simp.Arith.Nat.instReprExpr_lean","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Nat.Linear.ExprCnstr.applyPerm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">applyPerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">perm</span> : <a href=\"./Lean/Util/SortExprs.html#Lean.Perm\">Lean.Perm</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a></span></div></div>","info":{"doc":"Applies the given variable permutation to the given expression constraint. ","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Nat.Linear.ExprCnstr.applyPerm","kind":"def","line":28,"name":"Nat.Linear.ExprCnstr.applyPerm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L28-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Nat.Linear.Expr.applyPerm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">applyPerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">perm</span> : <a href=\"./Lean/Util/SortExprs.html#Lean.Perm\">Lean.Perm</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"Applies the given variable permutation to `e` ","docLink":"./Lean/Meta/Tactic/Simp/Arith/Nat/Basic.html#Nat.Linear.Expr.applyPerm","kind":"def","line":17,"name":"Nat.Linear.Expr.applyPerm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Simp/Arith/Nat/Basic.lean#L17-L26"}}],"imports":["Lean.Util.SortExprs","Lean.Meta.KExprMap","Lean.Meta.Offset","Lean.Data.RArray","Lean.Meta.AppBuilder","Lean.Meta.NatInstTesters"],"instances":[{"className":"Repr","name":"Lean.Meta.Simp.Arith.Nat.instReprExpr_lean","typeNames":["Nat.Linear.Expr"]},{"className":"Repr","name":"Lean.Meta.Simp.Arith.Nat.instReprExprCnstr_lean","typeNames":["Nat.Linear.ExprCnstr"]},{"className":"Repr","name":"Lean.Meta.Simp.Arith.Nat.instReprPolyCnstr_lean","typeNames":["Nat.Linear.PolyCnstr"]},{"className":"Lean.ToExpr","name":"Lean.Meta.Simp.Arith.Nat.instToExprLinearExpr","typeNames":["Lean.Meta.Simp.Arith.Nat.LinearExpr"]},{"className":"Lean.ToExpr","name":"Lean.Meta.Simp.Arith.Nat.instToExprLinearCnstr","typeNames":["Lean.Meta.Simp.Arith.Nat.LinearCnstr"]}],"name":"Lean.Meta.Tactic.Simp.Arith.Nat.Basic"}