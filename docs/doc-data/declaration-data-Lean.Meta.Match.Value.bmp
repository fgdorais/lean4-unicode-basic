{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Match/Value.html#Lean.Meta.isMatchValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">isMatchValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Return true is `e` is a term that should be processed by the `match`-compiler using `casesValues` ","docLink":"./Lean/Meta/Match/Value.html#Lean.Meta.isMatchValue","kind":"def","line":16,"name":"Lean.Meta.isMatchValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Match/Value.lean#L16-L29"}}],"imports":["Lean.Meta.LitValues","Lean.Expr"],"instances":[],"name":"Lean.Meta.Match.Value"}