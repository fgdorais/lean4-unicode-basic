{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.elimOffset\"><span class=\"name\">Nat</span>.<span class=\"name\">elimOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₁</span> : <span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h₂</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.elimOffset","kind":"def","line":554,"name":"Nat.elimOffset","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L554-L555"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e </span><span class=\"fn\">e'</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : (<span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">e'</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e'</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq","kind":"theorem","line":547,"name":"Nat.Linear.Expr.eq_of_toNormPoly_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L547-L550"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : (<span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","kind":"theorem","line":542,"name":"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L542-L545"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\">isValid</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid","kind":"theorem","line":537,"name":"Nat.Linear.ExprCnstr.eq_true_of_isValid","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L537-L540"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\">isUnsat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat","kind":"theorem","line":532,"name":"Nat.Linear.ExprCnstr.eq_false_of_isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L532-L535"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\">isValid</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid","kind":"theorem","line":523,"name":"Nat.Linear.PolyCnstr.eq_true_of_isValid","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L523-L530"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\">isUnsat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat","kind":"theorem","line":512,"name":"Nat.Linear.PolyCnstr.eq_false_of_isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L512-L521"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\">isNonZero</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero","kind":"theorem","line":503,"name":"Nat.Linear.Poly.of_isNonZero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L503-L510"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">p</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\">isZero</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero","kind":"theorem","line":497,"name":"Nat.Linear.Poly.of_isZero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L497-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly","kind":"theorem","line":488,"name":"Nat.Linear.ExprCnstr.denote_toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L488-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly","kind":"theorem","line":479,"name":"Nat.Linear.ExprCnstr.denote_toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L479-L484"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly_norm_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\">toPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\">norm</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\">toNormPoly</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq","kind":"theorem","line":476,"name":"Nat.Linear.ExprCnstr.toPoly_norm_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L476-L477"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\">inc</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\">inc</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt","kind":"theorem","line":473,"name":"Nat.Linear.Expr.of_cancel_lt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L473-L474"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le","kind":"theorem","line":467,"name":"Nat.Linear.Expr.of_cancel_le","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L467-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b </span><span class=\"fn\">c </span><span class=\"fn\">d</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><span class=\"fn\">c</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><span class=\"fn\">d</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span><a href=\"./Init/Prelude.html#Prod.mk\">)</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq","kind":"theorem","line":461,"name":"Nat.Linear.Expr.of_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L461-L465"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">a</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\">toNormPoly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly","kind":"theorem","line":455,"name":"Nat.Linear.Expr.eq_of_toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L455-L459"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\">toPoly</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly","kind":"theorem","line":450,"name":"Nat.Linear.Expr.denote_toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L450-L451"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\">toPoly.go</a> <span class=\"fn\">k</span> <span class=\"fn\">e</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly_go","kind":"theorem","line":430,"name":"Nat.Linear.Expr.denote_toPoly_go","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L430-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq","kind":"theorem","line":425,"name":"Nat.Linear.Poly.denote_le_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L425-L426"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel","kind":"theorem","line":420,"name":"Nat.Linear.Poly.of_denote_le_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L420-L423"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel","kind":"theorem","line":417,"name":"Nat.Linear.Poly.denote_le_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L417-L418"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux","kind":"theorem","line":384,"name":"Nat.Linear.Poly.of_denote_le_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L384-L415"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux","kind":"theorem","line":350,"name":"Nat.Linear.Poly.denote_le_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L350-L382"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq","kind":"theorem","line":345,"name":"Nat.Linear.Poly.denote_eq_cancel_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L345-L346"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel","kind":"theorem","line":340,"name":"Nat.Linear.Poly.of_denote_eq_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L340-L343"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m₁ </span><span class=\"fn\">m₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\">cancel</a></span> <span class=\"fn\">m₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel","kind":"theorem","line":337,"name":"Nat.Linear.Poly.denote_eq_cancel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L337-L338"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux","kind":"theorem","line":306,"name":"Nat.Linear.Poly.of_denote_eq_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L306-L335"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux","kind":"theorem","line":272,"name":"Nat.Linear.Poly.denote_eq_cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L272-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse","kind":"theorem","line":262,"name":"Nat.Linear.Poly.denote_reverse","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L262-L263"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_cons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> (<a href=\"./Init/Prelude.html#Prod.mk\">(</a><span class=\"fn\">k</span><a href=\"./Init/Prelude.html#Prod.mk\">,</a> <span class=\"fn\">v</span><a href=\"./Init/Prelude.html#Prod.mk\">)</a> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">p</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons","kind":"theorem","line":255,"name":"Nat.Linear.Poly.denote_cons","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L255-L258"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">q</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> (<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">q</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append","kind":"theorem","line":248,"name":"Nat.Linear.Poly.denote_append","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L248-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_sort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">m</span>.<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\">norm</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort","kind":"theorem","line":243,"name":"Nat.Linear.Poly.denote_sort","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L243-L244"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_norm_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\">norm.go</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">r</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_norm_go","kind":"theorem","line":236,"name":"Nat.Linear.Poly.denote_norm_go","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L236-L239"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\">insert</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insert","kind":"theorem","line":221,"name":"Nat.Linear.Poly.denote_insert","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L221-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr","kind":"def","line":215,"name":"Nat.Linear.PolyCnstr.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L215-L216"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go","kind":"def","line":210,"name":"Nat.Linear.Poly.toExpr.go","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L210-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr","kind":"def","line":205,"name":"Nat.Linear.Poly.toExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L205-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr","kind":"def","line":197,"name":"Nat.Linear.monomialToExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L197-L203"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly","kind":"def","line":193,"name":"Nat.Linear.ExprCnstr.toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L193-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly","kind":"def","line":190,"name":"Nat.Linear.ExprCnstr.toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L190-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote","kind":"def","line":184,"name":"Nat.Linear.ExprCnstr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L184-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid","kind":"def","line":178,"name":"Nat.Linear.PolyCnstr.isValid","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L178-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat","kind":"def","line":172,"name":"Nat.Linear.PolyCnstr.isUnsat","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L172-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm","kind":"def","line":168,"name":"Nat.Linear.PolyCnstr.norm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L168-L170"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote","kind":"def","line":162,"name":"Nat.Linear.PolyCnstr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L162-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs","kind":"def","line":160,"name":"Nat.Linear.ExprCnstr.rhs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs","kind":"def","line":159,"name":"Nat.Linear.ExprCnstr.lhs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L159-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq","kind":"def","line":158,"name":"Nat.Linear.ExprCnstr.eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L158-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">ExprCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk","kind":"ctor","line":157,"name":"Nat.Linear.ExprCnstr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L157-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr","kind":"structure","line":157,"name":"Nat.Linear.ExprCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L157-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instLawfulBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr","kind":"instance","line":144,"name":"Nat.Linear.instLawfulBEqPolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L144-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr","kind":"instance","line":141,"name":"Nat.Linear.instBEqPolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L141-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr.beq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr.beq","kind":"def","line":141,"name":"Nat.Linear.instBEqPolyCnstr.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L141-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs","kind":"def","line":140,"name":"Nat.Linear.PolyCnstr.rhs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L140-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs","kind":"def","line":139,"name":"Nat.Linear.PolyCnstr.lhs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq","kind":"def","line":138,"name":"Nat.Linear.PolyCnstr.eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L138-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">eq</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs </span><span class=\"fn\">rhs</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">PolyCnstr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk","kind":"ctor","line":137,"name":"Nat.Linear.PolyCnstr.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr","kind":"structure","line":137,"name":"Nat.Linear.PolyCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L137-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">inc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc","kind":"def","line":134,"name":"Nat.Linear.Expr.inc","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L134-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly","kind":"def","line":131,"name":"Nat.Linear.Expr.toNormPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L131-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">coeff</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly.go","kind":"def","line":124,"name":"Nat.Linear.Expr.toPoly.go","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L124-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly","kind":"def","line":119,"name":"Nat.Linear.Expr.toPoly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L119-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mp</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le","kind":"def","line":117,"name":"Nat.Linear.Poly.denote_le","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L117-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mp</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq","kind":"def","line":115,"name":"Nat.Linear.Poly.denote_eq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L115-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero","kind":"def","line":110,"name":"Nat.Linear.Poly.isNonZero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L110-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero","kind":"def","line":105,"name":"Nat.Linear.Poly.isZero","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L105-L108"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?","kind":"def","line":99,"name":"Nat.Linear.Poly.isNum?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L99-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p₁ </span><span class=\"fn\">p₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel","kind":"def","line":96,"name":"Nat.Linear.Poly.cancel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">hugeFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel","kind":"def","line":94,"name":"Nat.Linear.hugeFuel","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L94-L94"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fuel</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m₁ </span><span class=\"fn\">m₂ </span><span class=\"fn\">r₁ </span><span class=\"fn\">r₂</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux","kind":"def","line":75,"name":"Nat.Linear.Poly.cancelAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L75-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p </span><span class=\"fn\">r</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm.go","kind":"def","line":70,"name":"Nat.Linear.Poly.norm.go","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L70-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm","kind":"def","line":68,"name":"Nat.Linear.Poly.norm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L68-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insert","kind":"def","line":57,"name":"Nat.Linear.Poly.insert","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L57-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote","kind":"def","line":52,"name":"Nat.Linear.Poly.denote","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L52-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly","kind":"def","line":50,"name":"Nat.Linear.Poly","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote","kind":"def","line":43,"name":"Nat.Linear.Expr.denote","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L43-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr.beq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqExpr</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr.beq","kind":"def","line":41,"name":"Nat.Linear.instBEqExpr.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqExpr","kind":"instance","line":41,"name":"Nat.Linear.instBEqExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr.default\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr.default","kind":"def","line":41,"name":"Nat.Linear.instInhabitedExpr.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr","kind":"instance","line":41,"name":"Nat.Linear.instInhabitedExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR","kind":"ctor","line":40,"name":"Nat.Linear.Expr.mulR","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L40-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL","kind":"ctor","line":39,"name":"Nat.Linear.Expr.mulL","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L39-L39"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add","kind":"ctor","line":38,"name":"Nat.Linear.Expr.add","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">i</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var","kind":"ctor","line":37,"name":"Nat.Linear.Expr.var","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L37-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num","kind":"ctor","line":36,"name":"Nat.Linear.Expr.num","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L36-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr","kind":"inductive","line":35,"name":"Nat.Linear.Expr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L35-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote","kind":"def","line":32,"name":"Nat.Linear.Var.denote","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L32-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">fixedVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"When encoding polynomials. We use `fixedVar` for encoding numerals.\nThe denotation of `fixedVar` is always `1`. ","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar","kind":"def","line":27,"name":"Nat.Linear.fixedVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L27-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Context","kind":"def","line":25,"name":"Nat.Linear.Context","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L25-L25"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var","kind":"def","line":23,"name":"Nat.Linear.Var","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Nat/Linear.lean#L23-L23"}}],"imports":["Init.ByCases","Init.Data.Prod","Init.Data.RArray"],"instances":[{"className":"Inhabited","name":"Nat.Linear.instInhabitedExpr","typeNames":["Nat.Linear.Expr"]},{"className":"BEq","name":"Nat.Linear.instBEqExpr","typeNames":["Nat.Linear.Expr"]},{"className":"BEq","name":"Nat.Linear.instBEqPolyCnstr","typeNames":["Nat.Linear.PolyCnstr"]},{"className":"LawfulBEq","name":"Nat.Linear.instLawfulBEqPolyCnstr","typeNames":["Nat.Linear.PolyCnstr"]}],"name":"Init.Data.Nat.Linear"}