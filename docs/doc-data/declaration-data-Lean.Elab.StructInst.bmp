{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.elabStructInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">elabStructInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElab\">TermElab</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.elabStructInst","kind":"def","line":1313,"name":"Lean.Elab.Term.StructInst.elabStructInst","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L1313-L1326"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatStructInstView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatStructInstView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatStructInstView","kind":"instance","line":322,"name":"Lean.Elab.Term.StructInst.instToFormatStructInstView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L322-L322"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatFieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldView","kind":"instance","line":321,"name":"Lean.Elab.Term.StructInst.instToFormatFieldView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L321-L321"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStructInstView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedStructInstView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStructInstView","kind":"instance","line":307,"name":"Lean.Elab.Term.StructInst.instInhabitedStructInstView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStructInstView.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedStructInstView</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStructInstView.default","kind":"def","line":307,"name":"Lean.Elab.Term.StructInst.instInhabitedStructInstView.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.sources\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">StructInstView</span>.<span class=\"name\">sources</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a></div></div>","info":{"doc":"The additional sources for fields for the structure instance. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.sources","kind":"def","line":306,"name":"Lean.Elab.Term.StructInst.StructInstView.sources","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">StructInstView</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></span></div></div>","info":{"doc":"The fields of the structure instance. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.fields","kind":"def","line":304,"name":"Lean.Elab.Term.StructInst.StructInstView.fields","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L304-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">StructInstView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"The syntax for the whole structure instance. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.ref","kind":"def","line":302,"name":"Lean.Elab.Term.StructInst.StructInstView.ref","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L302-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">StructInstView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fields</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sources</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\">StructInstView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView.mk","kind":"ctor","line":300,"name":"Lean.Elab.Term.StructInst.StructInstView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L300-L300"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">StructInstView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The view for structure instance notation.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.StructInstView","kind":"structure","line":297,"name":"Lean.Elab.Term.StructInst.StructInstView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L297-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldView","kind":"instance","line":295,"name":"Lean.Elab.Term.StructInst.instInhabitedFieldView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L295-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldView.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldView</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldView.default","kind":"def","line":295,"name":"Lean.Elab.Term.StructInst.instInhabitedFieldView.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L295-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldView</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a></div></div>","info":{"doc":"The value of the field. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.val","kind":"def","line":294,"name":"Lean.Elab.Term.StructInst.FieldView.val","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L294-L294"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.lhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldView</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></span></div></div>","info":{"doc":"The LHS components. This is nonempty. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.lhs","kind":"def","line":292,"name":"Lean.Elab.Term.StructInst.FieldView.lhs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L292-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldView</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"The whole field syntax. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.ref","kind":"def","line":290,"name":"Lean.Elab.Term.StructInst.FieldView.ref","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L290-L290"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">lhs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Term\">Term</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\">FieldView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView.mk","kind":"ctor","line":288,"name":"Lean.Elab.Term.StructInst.FieldView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L288-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`Field StructInstView` is a representation of a field in the structure instance.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldView","kind":"structure","line":285,"name":"Lean.Elab.Term.StructInst.FieldView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L285-L295"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatFieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">ToFormat</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldLHS","kind":"instance","line":278,"name":"Lean.Elab.Term.StructInst.instToFormatFieldLHS","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L278-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldLHS</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS.default","kind":"def","line":276,"name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L276-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS","kind":"instance","line":276,"name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L276-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.modifyOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">modifyOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref </span><span class=\"fn\">index</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></div></div>","info":{"doc":"An array indexing component for a field left-hand side. For example `[3]` in `{ arr[3] := v }`. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.modifyOp","kind":"ctor","line":274,"name":"Lean.Elab.Term.StructInst.FieldLHS.modifyOp","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L274-L275"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">fieldIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">idx</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></div></div>","info":{"doc":"A numeric index component for a field left-hand side. For example `3` in `{ x.3 := v }`. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldIndex","kind":"ctor","line":272,"name":"Lean.Elab.Term.StructInst.FieldLHS.fieldIndex","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L272-L273"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.parentFieldName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">parentFieldName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName </span><span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></div></div>","info":{"doc":"(Can't be written by users.) A field setting an entire parent.\nThe `structName` is the name of the parent structure, and `name` is the projection field name.\nAlways appears as the only LHS component.  ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.parentFieldName","kind":"ctor","line":268,"name":"Lean.Elab.Term.StructInst.FieldLHS.parentFieldName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L268-L271"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">fieldName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">FieldLHS</a></div></div>","info":{"doc":"A name component for a field left-hand side. For example, `x` and `y` in `{ x.y := v }`. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldName","kind":"ctor","line":266,"name":"Lean.Elab.Term.StructInst.FieldLHS.fieldName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L266-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A component of a left-hand side for a field appearing in structure instance syntax.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS","kind":"inductive","line":262,"name":"Lean.Elab.Term.StructInst.FieldLHS","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L262-L276"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSourcesView.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedSourcesView</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSourcesView.default","kind":"def","line":157,"name":"Lean.Elab.Term.StructInst.instInhabitedSourcesView.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L157-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSourcesView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedSourcesView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSourcesView","kind":"instance","line":157,"name":"Lean.Elab.Term.StructInst.instInhabitedSourcesView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L157-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.implicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">SourcesView</span>.<span class=\"name\">implicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"The syntax for a trailing `..`. This is \"ellipsis mode\" for missing fields, similar to ellipsis mode for applications. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.implicit","kind":"def","line":156,"name":"Lean.Elab.Term.StructInst.SourcesView.implicit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L156-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.explicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">SourcesView</span>.<span class=\"name\">explicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a></span></div></div>","info":{"doc":"Explicit sources (i.e., one of the structures `sᵢ` that appear in `{ s₁, …, sₙ with … }`). ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.explicit","kind":"def","line":154,"name":"Lean.Elab.Term.StructInst.SourcesView.explicit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">SourcesView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">explicit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">implicit</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\">SourcesView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView.mk","kind":"ctor","line":152,"name":"Lean.Elab.Term.StructInst.SourcesView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L152-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">SourcesView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A view of the sources of fields for the structure instance notation.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.SourcesView","kind":"structure","line":149,"name":"Lean.Elab.Term.StructInst.SourcesView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L149-L157"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedExplicitSourceView</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView.default","kind":"def","line":147,"name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L147-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedExplicitSourceView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView","kind":"instance","line":147,"name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L147-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceView</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The name of the structure for the type of the explicit source. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.structName","kind":"def","line":146,"name":"Lean.Elab.Term.StructInst.ExplicitSourceView.structName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L146-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.fvar\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceView</span>.<span class=\"name\">fvar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"The local variable for this source. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.fvar","kind":"def","line":144,"name":"Lean.Elab.Term.StructInst.ExplicitSourceView.fvar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L144-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceView</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"The syntax of the explicit source. ","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.stx","kind":"def","line":142,"name":"Lean.Elab.Term.StructInst.ExplicitSourceView.stx","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L142-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceView</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvar</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\">ExplicitSourceView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView.mk","kind":"ctor","line":140,"name":"Lean.Elab.Term.StructInst.ExplicitSourceView.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L140-L140"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceView</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An *explicit source* is one of the structures `sᵢ` that appear in `{ s₁, …, sₙ with … }`.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceView","kind":"structure","line":137,"name":"Lean.Elab.Term.StructInst.ExplicitSourceView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L137-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">expandStructInstFields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Macro</a></div></div>","info":{"doc":"Expands fields.\n* Abbreviations. Example: `{ x }` expands to `{ x := x }`.\n* Equations. Example: `{ f | 0 => 0 | n + 1 => n }` expands to `{ f := fun x => match x with | 0 => 0 | n + 1 => n }`.\n* Binders and types. Example: `{ f n : Nat := n + 1 }` expands to `{ f := fun n => (n + 1 : Nat) }`.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstFields","kind":"def","line":121,"name":"Lean.Elab.Term.StructInst.expandStructInstFields","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L121-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstExpectedType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">expandStructInstExpectedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Macro</a></div></div>","info":{"doc":"Transforms structure instances such as `{ x := 0 : Foo }` into `({ x := 0 } : Foo)`.\nStructure instance notation makes use of the expected type.\n","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstExpectedType","kind":"def","line":70,"name":"Lean.Elab.Term.StructInst.expandStructInstExpectedType","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/StructInst.lean#L70-L81"}}],"imports":["Lean.Util.FindExpr","Lean.Parser.Term","Lean.Meta.Structure","Lean.Elab.App","Lean.Elab.Binders","Lean.Elab.StructInstHint","Lean.PrettyPrinter"],"instances":[{"className":"Inhabited","name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceView","typeNames":["Lean.Elab.Term.StructInst.ExplicitSourceView"]},{"className":"Inhabited","name":"Lean.Elab.Term.StructInst.instInhabitedSourcesView","typeNames":["Lean.Elab.Term.StructInst.SourcesView"]},{"className":"Inhabited","name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS","typeNames":["Lean.Elab.Term.StructInst.FieldLHS"]},{"className":"Std.ToFormat","name":"Lean.Elab.Term.StructInst.instToFormatFieldLHS","typeNames":["Lean.Elab.Term.StructInst.FieldLHS"]},{"className":"Inhabited","name":"Lean.Elab.Term.StructInst.instInhabitedFieldView","typeNames":["Lean.Elab.Term.StructInst.FieldView"]},{"className":"Inhabited","name":"Lean.Elab.Term.StructInst.instInhabitedStructInstView","typeNames":["Lean.Elab.Term.StructInst.StructInstView"]},{"className":"Std.ToFormat","name":"Lean.Elab.Term.StructInst.instToFormatFieldView","typeNames":["Lean.Elab.Term.StructInst.FieldView"]},{"className":"Std.ToFormat","name":"Lean.Elab.Term.StructInst.instToFormatStructInstView","typeNames":["Lean.Elab.Term.StructInst.StructInstView"]}],"name":"Lean.Elab.StructInst"}