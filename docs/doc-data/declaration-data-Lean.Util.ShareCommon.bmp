{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.shareCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">shareCommon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.shareCommon","kind":"def","line":54,"name":"Lean.ShareCommon.shareCommon","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonM\">PShareCommonM</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonM.run","kind":"def","line":52,"name":"Lean.ShareCommon.PShareCommonM.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonM.run\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonM\">ShareCommonM</a> <span class=\"fn\">α</span></span> → <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonM.run","kind":"def","line":51,"name":"Lean.ShareCommon.ShareCommonM.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.run\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT\">PShareCommonT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.run","kind":"def","line":50,"name":"Lean.ShareCommon.PShareCommonT.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L50-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.run\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT\">ShareCommonT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.run","kind":"def","line":49,"name":"Lean.ShareCommon.ShareCommonT.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.monadShareCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonT</span>.<span class=\"name\">monadShareCommon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/ShareCommon.html#MonadShareCommon\">MonadShareCommon</a> <span class=\"fn\">(<a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT\">PShareCommonT</a> <span class=\"fn\">m</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.monadShareCommon","kind":"instance","line":46,"name":"Lean.ShareCommon.PShareCommonT.monadShareCommon","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L46-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.monadShareCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonT</span>.<span class=\"name\">monadShareCommon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/ShareCommon.html#MonadShareCommon\">MonadShareCommon</a> <span class=\"fn\">(<a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT\">ShareCommonT</a> <span class=\"fn\">m</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.monadShareCommon","kind":"instance","line":43,"name":"Lean.ShareCommon.ShareCommonT.monadShareCommon","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.withShareCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonT</span>.<span class=\"name\">withShareCommon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT\">PShareCommonT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT.withShareCommon","kind":"def","line":40,"name":"Lean.ShareCommon.PShareCommonT.withShareCommon","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.withShareCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonT</span>.<span class=\"name\">withShareCommon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT\">ShareCommonT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT.withShareCommon","kind":"def","line":37,"name":"Lean.ShareCommon.ShareCommonT.withShareCommon","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonM\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonM","kind":"def","line":35,"name":"Lean.ShareCommon.PShareCommonM","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L35-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonM\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonM","kind":"def","line":34,"name":"Lean.ShareCommon.ShareCommonM","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L34-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">PShareCommonT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.PShareCommonT","kind":"def","line":33,"name":"Lean.ShareCommon.PShareCommonT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L33-L33"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">ShareCommonT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u_1 u_2)</div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.ShareCommonT","kind":"def","line":32,"name":"Lean.ShareCommon.ShareCommonT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.persistentObjectFactory\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">persistentObjectFactory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/ShareCommon.html#ShareCommon.StateFactory\">ShareCommon.StateFactory</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.persistentObjectFactory","kind":"def","line":26,"name":"Lean.ShareCommon.persistentObjectFactory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L26-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/ShareCommon.html#Lean.ShareCommon.objectFactory\"><span class=\"name\">Lean</span>.<span class=\"name\">ShareCommon</span>.<span class=\"name\">objectFactory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/ShareCommon.html#ShareCommon.StateFactory\">ShareCommon.StateFactory</a></div></div>","info":{"doc":"","docLink":"./Lean/Util/ShareCommon.html#Lean.ShareCommon.objectFactory","kind":"def","line":20,"name":"Lean.ShareCommon.objectFactory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Util/ShareCommon.lean#L20-L24"}}],"imports":["Init.ShareCommon","Std.Data.HashSet.Basic","Std.Data.HashMap.Basic","Lean.Data.PersistentHashMap","Lean.Data.PersistentHashSet"],"instances":[{"className":"MonadShareCommon","name":"Lean.ShareCommon.ShareCommonT.monadShareCommon","typeNames":["Lean.ShareCommon.ShareCommonT"]},{"className":"MonadShareCommon","name":"Lean.ShareCommon.PShareCommonT.monadShareCommon","typeNames":["Lean.ShareCommon.PShareCommonT"]}],"name":"Lean.Util.ShareCommon"}