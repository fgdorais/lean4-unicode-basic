{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prec</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStack","kind":"def","line":732,"name":"Lean.Parser.parserOfStack","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L732-L733"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserOfStackFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">offset</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserOfStackFn","kind":"def","line":705,"name":"Lean.Parser.parserOfStackFn","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L705-L730"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a>)</span></span></div></div>","info":{"doc":"Resolve the given parser name and return a list of candidates. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserName","kind":"def","line":701,"name":"Lean.Parser.resolveParserName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L701-L703"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span>.<span class=\"name\">resolveParserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></span></div></div>","info":{"doc":"Resolve the given parser name and return a list of candidates. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserContext.resolveParserName","kind":"def","line":697,"name":"Lean.Parser.ParserContext.resolveParserName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L697-L699"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">resolveParserNameCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ident</span> : <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Ident\">Ident</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></span></div></div>","info":{"doc":"Resolve the given parser name and return a list of candidates. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.resolveParserNameCore","kind":"def","line":663,"name":"Lean.Parser.resolveParserNameCore","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L663-L695"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.alias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">alias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a parser alias. Note that as aliases are built-in, a corresponding declaration may\nnot be in the environment (yet).\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.alias","kind":"ctor","line":657,"name":"Lean.Parser.ParserResolution.alias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L657-L661"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">isDescr</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a parser declaration in the environment.  A `(Trailing)ParserDescr` if `isDescr` is\ntrue.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.parser","kind":"ctor","line":652,"name":"Lean.Parser.ParserResolution.parser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L652-L656"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cat</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\">ParserResolution</a></div></div>","info":{"doc":"Reference to a category. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution.category","kind":"ctor","line":650,"name":"Lean.Parser.ParserResolution.category","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L650-L651"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserResolution</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Result of resolving a parser name. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserResolution","kind":"inductive","line":648,"name":"Lean.Parser.ParserResolution","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L648-L661"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.aliasExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">aliasExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">EnvExtension</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span></div></div>","info":{"doc":"Helper environment extension that gives us access to built-in aliases in pure parser functions.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.aliasExtension","kind":"opaque","line":642,"name":"Lean.Parser.aliasExtension","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L642-L646"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDecl","kind":"def","line":640,"name":"Lean.Parser.withOpenDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L640-L640"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"If the parsing stack is of the form `#[.., openDecl]`, we process the open declaration, and execute `p` ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFn","kind":"def","line":632,"name":"Lean.Parser.withOpenDeclFn","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L632-L638"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpen\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpen","kind":"def","line":630,"name":"Lean.Parser.withOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L630-L630"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"If the parsing stack is of the form `#[.., openCommand]`, we process the open command, and execute `p` ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenFn","kind":"def","line":618,"name":"Lean.Parser.withOpenFn","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L618-L627"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withOpenDeclFnCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">openDeclStx</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.withOpenDeclFnCore","kind":"def","line":604,"name":"Lean.Parser.withOpenDeclFnCore","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L604-L616"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.commandParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">commandParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">rbp</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.commandParser","kind":"def","line":590,"name":"Lean.Parser.commandParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L590-L591"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a> := <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">LeadingIdentBehavior.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserCategory","kind":"def","line":574,"name":"Lean.Parser.registerParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L574-L577"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinDynamicParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"A builtin parser attribute that can be extended by users. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinDynamicParserAttribute","kind":"def","line":564,"name":"Lean.Parser.registerBuiltinDynamicParserAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L564-L566"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">AttributeImpl</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserAttributeImpl","kind":"def","line":557,"name":"Lean.Parser.mkParserAttributeImpl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L557-L562"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinParserAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a> := <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\">LeadingIdentBehavior.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"The parsing tables for builtin parsers are \"stored\" in the extracted source code.\n","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinParserAttribute","kind":"def","line":518,"name":"Lean.Parser.registerBuiltinParserAttribute","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L518-L533"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserPriority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">args</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserPriority","kind":"def","line":495,"name":"Lean.Parser.getParserPriority","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L495-L501"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareTrailingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareTrailingBuiltinParser","kind":"def","line":492,"name":"Lean.Parser.declareTrailingBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L492-L493"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareLeadingBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareLeadingBuiltinParser","kind":"def","line":489,"name":"Lean.Parser.declareLeadingBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L489-L490"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">declareBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">addFnName </span><span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.declareBuiltinParser","kind":"def","line":485,"name":"Lean.Parser.declareBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L485-L487"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&lt;input&gt;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span></div></div>","info":{"doc":"convenience function for testing ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserCategory","kind":"def","line":473,"name":"Lean.Parser.runParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L473-L483"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">ParserState</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserState","kind":"def","line":470,"name":"Lean.Parser.mkParserState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L470-L471"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkInputContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input </span><span class=\"fn\">fileName</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">normalizeLineEndings</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos</span> : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> := <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">endPos_valid</span> : <span class=\"fn\">endPos</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">input</span>.<a href=\"./Init/Prelude.html#String.endPos\">endPos</a></span> := by simp)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">InputContext</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkInputContext","kind":"def","line":450,"name":"Lean.Parser.mkInputContext","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L450-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getTokenTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getTokenTable","kind":"def","line":445,"name":"Lean.Parser.getTokenTable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L445-L446"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxNodeKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxNodeKinds","kind":"def","line":441,"name":"Lean.Parser.getSyntaxNodeKinds","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L441-L443"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isValidSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isValidSyntaxNodeKind","kind":"def","line":435,"name":"Lean.Parser.isValidSyntaxNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L435-L439"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addSyntaxNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addSyntaxNodeKind","kind":"def","line":432,"name":"Lean.Parser.addSyntaxNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L432-L433"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tk</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addToken","kind":"def","line":426,"name":"Lean.Parser.addToken","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L426-L430"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFnImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.categoryParserFnImpl","kind":"def","line":415,"name":"Lean.Parser.categoryParserFnImpl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L415-L421"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkCategoryAntiquotParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkCategoryAntiquotParser","kind":"def","line":408,"name":"Lean.Parser.mkCategoryAntiquotParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L408-L409"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinTrailingParser","kind":"def","line":405,"name":"Lean.Parser.addBuiltinTrailingParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L405-L406"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinLeadingParser","kind":"def","line":402,"name":"Lean.Parser.addBuiltinLeadingParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L402-L403"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addBuiltinParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addBuiltinParser","kind":"def","line":394,"name":"Lean.Parser.addBuiltinParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L394-L400"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"Interpret `declName` if possible and inside a quotation, or else run `p`. The `ParserInfo` will always be taken from `p`. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalInsideQuot","kind":"def","line":385,"name":"Lean.Parser.evalInsideQuot","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L385-L392"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">internal</span>.<span class=\"name\">parseQuotWithCurrentStage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.internal.parseQuotWithCurrentStage","kind":"opaque","line":379,"name":"Lean.Parser.internal.parseQuotWithCurrentStage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L379-L383"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConst","kind":"opaque","line":376,"name":"Lean.Parser.evalParserConst","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L376-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">evalParserConstUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">ParserFn</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.evalParserConstUnsafe","kind":"def","line":368,"name":"Lean.Parser.evalParserConstUnsafe","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L368-L374"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingIdentBehavior</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.leadingIdentBehavior","kind":"def","line":363,"name":"Lean.Parser.leadingIdentBehavior","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L363-L366"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserCategory","kind":"def","line":357,"name":"Lean.Parser.addParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L357-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserCategory","kind":"def","line":354,"name":"Lean.Parser.isParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L354-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\">ParserExtension</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserExtension","kind":"opaque","line":346,"name":"Lean.Parser.parserExtension","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L346-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runParserAttributeHooks</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.runParserAttributeHooks","kind":"def","line":316,"name":"Lean.Parser.runParserAttributeHooks","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L316-L318"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerParserAttributeHook</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hook</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerParserAttributeHook","kind":"def","line":313,"name":"Lean.Parser.registerParserAttributeHook","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L313-L314"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAttributeHooks</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAttributeHooks","kind":"opaque","line":311,"name":"Lean.Parser.parserAttributeHooks","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L311-L311"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">postAdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">builtin</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Called after a parser attribute is applied to a declaration. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.postAdd","kind":"def","line":309,"name":"Lean.Parser.ParserAttributeHook.postAdd","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L309-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">postAdd</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\">ParserAttributeHook</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook.mk","kind":"ctor","line":307,"name":"Lean.Parser.ParserAttributeHook.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAttributeHook</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAttributeHook","kind":"structure","line":307,"name":"Lean.Parser.ParserAttributeHook","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L307-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstant","kind":"def","line":304,"name":"Lean.Parser.mkParserOfConstant","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L304-L305"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">compileParserDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.compileParserDescr","kind":"def","line":282,"name":"Lean.Parser.compileParserDescr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L282-L302"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compileParserDescr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantAux","kind":"opaque","line":279,"name":"Lean.Parser.mkParserOfConstantAux","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L279-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkParserOfConstantUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">constName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">compileParserDescr</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">ImportM</a> (<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.mkParserOfConstantUnsafe","kind":"def","line":256,"name":"Lean.Parser.mkParserOfConstantUnsafe","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L256-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureConstantParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureConstantParserAlias","kind":"def","line":253,"name":"Lean.Parser.ensureConstantParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L253-L254"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureBinaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureBinaryParserAlias","kind":"def","line":250,"name":"Lean.Parser.ensureBinaryParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L250-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ensureUnaryParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ensureUnaryParserAlias","kind":"def","line":247,"name":"Lean.Parser.ensureUnaryParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L247-L248"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getSyntaxKindOfParserAlias?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getSyntaxKindOfParserAlias?","kind":"def","line":244,"name":"Lean.Parser.getSyntaxKindOfParserAlias?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L244-L245"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isParserAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.isParserAlias","kind":"def","line":239,"name":"Lean.Parser.isParserAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L239-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserForallParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForallParserForallParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserForallParserAliasValue","kind":"instance","line":237,"name":"Lean.Parser.instCoeForallParserForallParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L237-L237"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeForallParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeForallParserParserAliasValue","kind":"instance","line":236,"name":"Lean.Parser.instCoeForallParserParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L236-L236"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeParserParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.instCoeParserParserAliasValue","kind":"instance","line":235,"name":"Lean.Parser.instCoeParserParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L235-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAlias</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a></span> := <a href=\"./Init/Prelude.html#Option.none\">none</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a> := <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\">{</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\">}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAlias","kind":"def","line":229,"name":"Lean.Parser.registerAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L229-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getParserAliasInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getParserAliasInfo","kind":"def","line":225,"name":"Lean.Parser.getParserAliasInfo","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L225-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliases2infoRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliases2infoRef","kind":"opaque","line":223,"name":"Lean.Parser.parserAliases2infoRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L223-L223"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAlias2kindRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAlias2kindRef","kind":"opaque","line":222,"name":"Lean.Parser.parserAlias2kindRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L222-L222"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">parserAliasesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameMap\">NameMap</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\">ParserAliasValue</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.parserAliasesRef","kind":"opaque","line":221,"name":"Lean.Parser.parserAliasesRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L221-L221"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">autoGroupArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Whether arguments should be wrapped in `group(·)` if they do not produce exactly one syntax node. ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.autoGroupArgs","kind":"def","line":219,"name":"Lean.Parser.ParserAliasInfo.autoGroupArgs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L219-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">stackSz?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"Number of syntax nodes produced by this parser. `none` means \"sum of input sizes\". ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.stackSz?","kind":"def","line":217,"name":"Lean.Parser.ParserAliasInfo.stackSz?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.declName","kind":"def","line":215,"name":"Lean.Parser.ParserAliasInfo.declName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L215-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">stackSz?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">autoGroupArgs</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\">ParserAliasInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo.mk","kind":"ctor","line":214,"name":"Lean.Parser.ParserAliasInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L214-L214"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasInfo","kind":"structure","line":214,"name":"Lean.Parser.ParserAliasInfo","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L214-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserAliasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserAliasValue","kind":"def","line":212,"name":"Lean.Parser.ParserAliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getBinaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getBinaryAlias","kind":"def","line":206,"name":"Lean.Parser.getBinaryAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L206-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getUnaryAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\">α</span> → <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getUnaryAlias","kind":"def","line":200,"name":"Lean.Parser.getUnaryAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L200-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getConstAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getConstAlias","kind":"def","line":193,"name":"Lean.Parser.getConstAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L193-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getAlias\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getAlias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span>)</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getAlias","kind":"def","line":190,"name":"Lean.Parser.getAlias","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L190-L191"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerAliasCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mapRef</span> : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\">AliasTable</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">aliasName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">value</span> : <span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerAliasCore","kind":"def","line":184,"name":"Lean.Parser.registerAliasCore","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L184-L188"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasTable","kind":"def","line":182,"name":"Lean.Parser.AliasTable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">binary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.binary","kind":"ctor","line":180,"name":"Lean.Parser.AliasValue.binary","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">unary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.unary","kind":"ctor","line":179,"name":"Lean.Parser.AliasValue.unary","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span>.<span class=\"name\">const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\">AliasValue</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue.const","kind":"ctor","line":178,"name":"Lean.Parser.AliasValue.const","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L178-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.AliasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">AliasValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Parser aliases for making `ParserDescr` extensible ","docLink":"./Lean/Parser/Extension.html#Lean.Parser.AliasValue","kind":"inductive","line":176,"name":"Lean.Parser.AliasValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L176-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">addEntryImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.addEntryImpl","kind":"def","line":159,"name":"Lean.Parser.ParserExtension.addEntryImpl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L159-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParserTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokenTable</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">info</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParserTokens","kind":"def","line":149,"name":"Lean.Parser.addParserTokens","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L149-L151"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addParser","kind":"def","line":143,"name":"Lean.Parser.addParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L143-L147"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addTrailingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">TrailingParser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addTrailingParser","kind":"def","line":135,"name":"Lean.Parser.addTrailingParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L135-L141"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">addLeadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.addLeadingParser","kind":"def","line":107,"name":"Lean.Parser.addLeadingParser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L107-L123"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.getCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getCategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">ParserCategory</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.getCategory","kind":"def","line":104,"name":"Lean.Parser.getCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L104-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">throwUnknownParserCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.throwUnknownParserCategory","kind":"def","line":101,"name":"Lean.Parser.throwUnknownParserCategory","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L101-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension","kind":"def","line":87,"name":"Lean.Parser.ParserExtension","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedState</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState.default","kind":"def","line":82,"name":"Lean.Parser.ParserExtension.instInhabitedState.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedState","kind":"instance","line":82,"name":"Lean.Parser.ParserExtension.instInhabitedState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">categories</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.categories","kind":"def","line":81,"name":"Lean.Parser.ParserExtension.State.categories","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L81-L81"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">kinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.kinds","kind":"def","line":80,"name":"Lean.Parser.ParserExtension.State.kinds","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L80-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.tokens","kind":"def","line":79,"name":"Lean.Parser.ParserExtension.State.tokens","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L79-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tokens</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kinds</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">categories</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State.mk","kind":"ctor","line":78,"name":"Lean.Parser.ParserExtension.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L78-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.State","kind":"structure","line":78,"name":"Lean.Parser.ParserExtension.State","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L78-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">toOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a> → <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.toOLeanEntry","kind":"def","line":72,"name":"Lean.Parser.ParserExtension.Entry.toOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L72-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry","kind":"instance","line":70,"name":"Lean.Parser.ParserExtension.instInhabitedEntry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedEntry.default","kind":"def","line":70,"name":"Lean.Parser.ParserExtension.instInhabitedEntry.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">leading</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.parser","kind":"ctor","line":69,"name":"Lean.Parser.ParserExtension.Entry.parser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.category","kind":"ctor","line":68,"name":"Lean.Parser.ParserExtension.Entry.category","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.kind","kind":"ctor","line":67,"name":"Lean.Parser.ParserExtension.Entry.kind","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L67-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\">Entry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry.token","kind":"ctor","line":66,"name":"Lean.Parser.ParserExtension.Entry.token","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">Entry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.Entry","kind":"inductive","line":65,"name":"Lean.Parser.ParserExtension.Entry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L65-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry","kind":"instance","line":63,"name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">instInhabitedOLeanEntry</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default","kind":"def","line":63,"name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">parser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">prio</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.parser","kind":"ctor","line":62,"name":"Lean.Parser.ParserExtension.OLeanEntry.parser","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">catName </span><span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">behavior</span> : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.category","kind":"ctor","line":61,"name":"Lean.Parser.ParserExtension.OLeanEntry.category","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.kind","kind":"ctor","line":60,"name":"Lean.Parser.ParserExtension.OLeanEntry.kind","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Token</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\">OLeanEntry</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry.token","kind":"ctor","line":59,"name":"Lean.Parser.ParserExtension.OLeanEntry.token","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserExtension</span>.<span class=\"name\">OLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.ParserExtension.OLeanEntry","kind":"inductive","line":58,"name":"Lean.Parser.ParserExtension.OLeanEntry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L58-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinParserCategoriesRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\">ParserCategories</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinParserCategoriesRef","kind":"opaque","line":38,"name":"Lean.Parser.builtinParserCategoriesRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L38-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">registerBuiltinNodeKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.registerBuiltinNodeKind","kind":"def","line":26,"name":"Lean.Parser.registerBuiltinNodeKind","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L26-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinSyntaxNodeKindSetRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">SyntaxNodeKindSet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinSyntaxNodeKindSetRef","kind":"opaque","line":24,"name":"Lean.Parser.builtinSyntaxNodeKindSetRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L24-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">builtinTokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">TokenTable</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Parser/Extension.html#Lean.Parser.builtinTokenTable","kind":"opaque","line":21,"name":"Lean.Parser.builtinTokenTable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Parser/Extension.lean#L21-L21"}}],"imports":["Lean.Parser.Basic","Lean.ScopedEnvExtension","Lean.PrivateName","Lean.BuiltinDocAttr"],"instances":[{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedOLeanEntry","typeNames":["Lean.Parser.ParserExtension.OLeanEntry"]},{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedEntry","typeNames":["Lean.Parser.ParserExtension.Entry"]},{"className":"Inhabited","name":"Lean.Parser.ParserExtension.instInhabitedState","typeNames":["Lean.Parser.ParserExtension.State"]},{"className":"Coe","name":"Lean.Parser.instCoeParserParserAliasValue","typeNames":["Lean.Parser.Parser","Lean.Parser.ParserAliasValue"]},{"className":"Coe","name":"Lean.Parser.instCoeForallParserParserAliasValue","typeNames":["Lean.Parser.ParserAliasValue"]},{"className":"Coe","name":"Lean.Parser.instCoeForallParserForallParserAliasValue","typeNames":["Lean.Parser.ParserAliasValue"]}],"name":"Lean.Parser.Extension"}