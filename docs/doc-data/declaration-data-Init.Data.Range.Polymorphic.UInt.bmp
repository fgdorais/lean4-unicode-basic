{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulRangeSizeOpen\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulRangeSizeOpen","kind":"instance","line":380,"name":"USize.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L380-L380"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instRangeSizeOpen\"><span class=\"name\">USize</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instRangeSizeOpen","kind":"instance","line":379,"name":"USize.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L379-L379"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulRangeSizeClosed\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulRangeSizeClosed","kind":"instance","line":367,"name":"USize.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L367-L377"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.rangeSizeSize_eq_toBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">rangeSizeSize_eq_toBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">bound</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.Bound\">Std.PRange.Bound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\">bound</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\"><span class=\"fn\">bound</span>.<a href=\"./Init/Prelude.html#USize.toBitVec\">toBitVec</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.rangeSizeSize_eq_toBitVec","kind":"theorem","line":363,"name":"USize.rangeSizeSize_eq_toBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L363-L365"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instRangeSizeClosed\"><span class=\"name\">USize</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instRangeSizeClosed","kind":"instance","line":360,"name":"USize.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L360-L361"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":358,"name":"USize.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L358-L358"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":357,"name":"USize.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L357-L357"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":356,"name":"USize.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L356-L356"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":355,"name":"USize.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L355-L355"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLT_1","kind":"instance","line":354,"name":"USize.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L354-L354"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLT\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLT","kind":"instance","line":353,"name":"USize.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L353-L353"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulOrderLT_1\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulOrderLT_1","kind":"instance","line":352,"name":"USize.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L352-L352"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLE\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerableLE","kind":"instance","line":346,"name":"USize.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L346-L350"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerable\"><span class=\"name\">USize</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instLawfulUpwardEnumerable","kind":"instance","line":334,"name":"USize.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L334-L344"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.upwardEnumerableLT_ofBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">upwardEnumerableLT_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.upwardEnumerableLT_ofBitVec","kind":"theorem","line":330,"name":"USize.upwardEnumerableLT_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L330-L332"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.upwardEnumerableLE_ofBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">upwardEnumerableLE_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.upwardEnumerableLE_ofBitVec","kind":"theorem","line":326,"name":"USize.upwardEnumerableLE_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L326-L328"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.succMany?_ofBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">succMany?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.succMany?_ofBitVec","kind":"theorem","line":322,"name":"USize.succMany?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L322-L324"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.succ?_ofBitVec\"><span class=\"name\">USize</span>.<span class=\"name\">succ?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#USize.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#USize.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.succ?_ofBitVec","kind":"theorem","line":317,"name":"USize.succ?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L317-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#USize.instUpwardEnumerable\"><span class=\"name\">USize</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#USize.instUpwardEnumerable","kind":"instance","line":313,"name":"USize.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L313-L315"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulRangeSizeOpen\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulRangeSizeOpen","kind":"instance","line":307,"name":"UInt64.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instRangeSizeOpen\"><span class=\"name\">UInt64</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instRangeSizeOpen","kind":"instance","line":306,"name":"UInt64.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulRangeSizeClosed\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulRangeSizeClosed","kind":"instance","line":294,"name":"UInt64.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L294-L304"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.rangeSizeSize_eq_toBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">rangeSizeSize_eq_toBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">bound</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.Bound\">Std.PRange.Bound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\">bound</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\"><span class=\"fn\">bound</span>.<a href=\"./Init/Prelude.html#UInt64.toBitVec\">toBitVec</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.rangeSizeSize_eq_toBitVec","kind":"theorem","line":290,"name":"UInt64.rangeSizeSize_eq_toBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L290-L292"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instRangeSizeClosed\"><span class=\"name\">UInt64</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instRangeSizeClosed","kind":"instance","line":287,"name":"UInt64.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":285,"name":"UInt64.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L285-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":284,"name":"UInt64.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L284-L284"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":283,"name":"UInt64.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L283-L283"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":282,"name":"UInt64.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L282-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLT_1","kind":"instance","line":281,"name":"UInt64.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L281-L281"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLT\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLT","kind":"instance","line":280,"name":"UInt64.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L280-L280"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulOrderLT_1\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulOrderLT_1","kind":"instance","line":279,"name":"UInt64.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L279-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLE\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerableLE","kind":"instance","line":273,"name":"UInt64.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L273-L277"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerable\"><span class=\"name\">UInt64</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instLawfulUpwardEnumerable","kind":"instance","line":261,"name":"UInt64.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L261-L271"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.upwardEnumerableLT_ofBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">upwardEnumerableLT_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.upwardEnumerableLT_ofBitVec","kind":"theorem","line":257,"name":"UInt64.upwardEnumerableLT_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L257-L259"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.upwardEnumerableLE_ofBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">upwardEnumerableLE_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.upwardEnumerableLE_ofBitVec","kind":"theorem","line":253,"name":"UInt64.upwardEnumerableLE_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L253-L255"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.succMany?_ofBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">succMany?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.succMany?_ofBitVec","kind":"theorem","line":249,"name":"UInt64.succMany?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L249-L251"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.succ?_ofBitVec\"><span class=\"name\">UInt64</span>.<span class=\"name\">succ?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">64</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt64.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.succ?_ofBitVec","kind":"theorem","line":244,"name":"UInt64.succ?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L244-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instUpwardEnumerable\"><span class=\"name\">UInt64</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt64.instUpwardEnumerable","kind":"instance","line":240,"name":"UInt64.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L240-L242"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulRangeSizeOpen\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulRangeSizeOpen","kind":"instance","line":234,"name":"UInt32.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L234-L234"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instRangeSizeOpen\"><span class=\"name\">UInt32</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instRangeSizeOpen","kind":"instance","line":233,"name":"UInt32.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L233-L233"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulRangeSizeClosed\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulRangeSizeClosed","kind":"instance","line":221,"name":"UInt32.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L221-L231"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.rangeSizeSize_eq_toBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">rangeSizeSize_eq_toBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">bound</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.Bound\">Std.PRange.Bound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\">bound</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\"><span class=\"fn\">bound</span>.<a href=\"./Init/Prelude.html#UInt32.toBitVec\">toBitVec</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.rangeSizeSize_eq_toBitVec","kind":"theorem","line":217,"name":"UInt32.rangeSizeSize_eq_toBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L217-L219"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instRangeSizeClosed\"><span class=\"name\">UInt32</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instRangeSizeClosed","kind":"instance","line":214,"name":"UInt32.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L214-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":212,"name":"UInt32.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L212-L212"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":211,"name":"UInt32.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L211-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":210,"name":"UInt32.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L210-L210"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":209,"name":"UInt32.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L209-L209"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLT_1","kind":"instance","line":208,"name":"UInt32.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L208-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLT\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLT","kind":"instance","line":207,"name":"UInt32.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L207-L207"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulOrderLT_1\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulOrderLT_1","kind":"instance","line":206,"name":"UInt32.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L206-L206"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLE\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerableLE","kind":"instance","line":200,"name":"UInt32.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L200-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerable\"><span class=\"name\">UInt32</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instLawfulUpwardEnumerable","kind":"instance","line":188,"name":"UInt32.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L188-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.upwardEnumerableLT_ofBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">upwardEnumerableLT_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.upwardEnumerableLT_ofBitVec","kind":"theorem","line":184,"name":"UInt32.upwardEnumerableLT_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L184-L186"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.upwardEnumerableLE_ofBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">upwardEnumerableLE_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.upwardEnumerableLE_ofBitVec","kind":"theorem","line":180,"name":"UInt32.upwardEnumerableLE_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L180-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.succMany?_ofBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">succMany?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.succMany?_ofBitVec","kind":"theorem","line":176,"name":"UInt32.succMany?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L176-L178"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.succ?_ofBitVec\"><span class=\"name\">UInt32</span>.<span class=\"name\">succ?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">32</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt32.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.succ?_ofBitVec","kind":"theorem","line":171,"name":"UInt32.succ?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L171-L174"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instUpwardEnumerable\"><span class=\"name\">UInt32</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt32.instUpwardEnumerable","kind":"instance","line":167,"name":"UInt32.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L167-L169"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulRangeSizeOpen\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulRangeSizeOpen","kind":"instance","line":161,"name":"UInt16.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L161-L161"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instRangeSizeOpen\"><span class=\"name\">UInt16</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instRangeSizeOpen","kind":"instance","line":160,"name":"UInt16.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L160-L160"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulRangeSizeClosed\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulRangeSizeClosed","kind":"instance","line":148,"name":"UInt16.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L148-L158"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.rangeSizeSize_eq_toBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">rangeSizeSize_eq_toBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">bound</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.Bound\">Std.PRange.Bound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\">bound</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\"><span class=\"fn\">bound</span>.<a href=\"./Init/Prelude.html#UInt16.toBitVec\">toBitVec</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.rangeSizeSize_eq_toBitVec","kind":"theorem","line":144,"name":"UInt16.rangeSizeSize_eq_toBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L144-L146"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instRangeSizeClosed\"><span class=\"name\">UInt16</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instRangeSizeClosed","kind":"instance","line":141,"name":"UInt16.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L141-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":139,"name":"UInt16.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L139-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":138,"name":"UInt16.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L138-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":137,"name":"UInt16.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L137-L137"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":136,"name":"UInt16.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L136-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLT_1","kind":"instance","line":135,"name":"UInt16.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L135-L135"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLT\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLT","kind":"instance","line":134,"name":"UInt16.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L134-L134"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulOrderLT_1\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulOrderLT_1","kind":"instance","line":133,"name":"UInt16.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLE\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerableLE","kind":"instance","line":127,"name":"UInt16.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L127-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerable\"><span class=\"name\">UInt16</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instLawfulUpwardEnumerable","kind":"instance","line":115,"name":"UInt16.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L115-L125"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.upwardEnumerableLT_ofBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">upwardEnumerableLT_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.upwardEnumerableLT_ofBitVec","kind":"theorem","line":111,"name":"UInt16.upwardEnumerableLT_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L111-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.upwardEnumerableLE_ofBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">upwardEnumerableLE_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.upwardEnumerableLE_ofBitVec","kind":"theorem","line":107,"name":"UInt16.upwardEnumerableLE_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L107-L109"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.succMany?_ofBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">succMany?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.succMany?_ofBitVec","kind":"theorem","line":103,"name":"UInt16.succMany?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L103-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.succ?_ofBitVec\"><span class=\"name\">UInt16</span>.<span class=\"name\">succ?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">16</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt16.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.succ?_ofBitVec","kind":"theorem","line":98,"name":"UInt16.succ?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L98-L101"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instUpwardEnumerable\"><span class=\"name\">UInt16</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt16.instUpwardEnumerable","kind":"instance","line":94,"name":"UInt16.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L94-L96"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulRangeSizeOpen\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulRangeSizeOpen","kind":"instance","line":88,"name":"UInt8.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L88-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instRangeSizeOpen\"><span class=\"name\">UInt8</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instRangeSizeOpen","kind":"instance","line":87,"name":"UInt8.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L87-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulRangeSizeClosed\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulRangeSizeClosed","kind":"instance","line":75,"name":"UInt8.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L75-L85"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.rangeSizeSize_eq_toBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">rangeSizeSize_eq_toBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">bound</span> : <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.Bound\">Std.PRange.Bound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\">bound</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize.size\">Std.PRange.RangeSize.size</a> <span class=\"fn\"><span class=\"fn\">bound</span>.<a href=\"./Init/Prelude.html#UInt8.toBitVec\">toBitVec</a></span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.rangeSizeSize_eq_toBitVec","kind":"theorem","line":71,"name":"UInt8.rangeSizeSize_eq_toBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L71-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instRangeSizeClosed\"><span class=\"name\">UInt8</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instRangeSizeClosed","kind":"instance","line":68,"name":"UInt8.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L68-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":66,"name":"UInt8.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":65,"name":"UInt8.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":64,"name":"UInt8.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L64-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":63,"name":"UInt8.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLT_1","kind":"instance","line":62,"name":"UInt8.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L62-L62"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLT\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLT","kind":"instance","line":61,"name":"UInt8.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulOrderLT_1\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulOrderLT_1","kind":"instance","line":60,"name":"UInt8.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L60-L60"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLE\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerableLE","kind":"instance","line":54,"name":"UInt8.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L54-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerable\"><span class=\"name\">UInt8</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instLawfulUpwardEnumerable","kind":"instance","line":42,"name":"UInt8.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L42-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.upwardEnumerableLT_ofBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">upwardEnumerableLT_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LT\">Std.PRange.UpwardEnumerable.LT</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.upwardEnumerableLT_ofBitVec","kind":"theorem","line":38,"name":"UInt8.upwardEnumerableLT_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L38-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.upwardEnumerableLE_ofBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">upwardEnumerableLE_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.LE\">Std.PRange.UpwardEnumerable.LE</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.upwardEnumerableLE_ofBitVec","kind":"theorem","line":34,"name":"UInt8.upwardEnumerableLE_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L34-L36"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.succMany?_ofBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">succMany?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succMany?\">Std.PRange.succMany?</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.succMany?_ofBitVec","kind":"theorem","line":30,"name":"UInt8.succMany?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L30-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.succ?_ofBitVec\"><span class=\"name\">UInt8</span>.<span class=\"name\">succ?_ofBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">8</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">{</a> <span class=\"fn\">toBitVec</span> := <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#UInt8.ofBitVec\">ofBitVec</a> <a href=\"./Init/Prelude.html#Functor.map\">&lt;$&gt;</a> <span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable.succ?\">Std.PRange.succ?</a> <span class=\"fn\">x</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.succ?_ofBitVec","kind":"theorem","line":25,"name":"UInt8.succ?_ofBitVec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L25-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instUpwardEnumerable\"><span class=\"name\">UInt8</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/UInt.html#UInt8.instUpwardEnumerable","kind":"instance","line":21,"name":"UInt8.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/UInt.lean#L21-L23"}}],"imports":["Init.Data.Range.Polymorphic.Instances","Init.Data.Order.Lemmas","Init.Data.UInt","Init.Omega","Init.Data.Range.Polymorphic.BitVec"],"instances":[{"className":"Std.PRange.UpwardEnumerable","name":"UInt8.instUpwardEnumerable","typeNames":["UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"UInt8.instLawfulUpwardEnumerable","typeNames":["UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"UInt8.instLawfulUpwardEnumerableLE","typeNames":["UInt8"]},{"className":"Std.LawfulOrderLT","name":"UInt8.instLawfulOrderLT_1","typeNames":["UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt8.instLawfulUpwardEnumerableLT","typeNames":["UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt8.instLawfulUpwardEnumerableLT_1","typeNames":["UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt8.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt8.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt8.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt8"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt8.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt8"]},{"className":"Std.PRange.RangeSize","name":"UInt8.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt8"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt8.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt8"]},{"className":"Std.PRange.RangeSize","name":"UInt8.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt8"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt8.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt8"]},{"className":"Std.PRange.UpwardEnumerable","name":"UInt16.instUpwardEnumerable","typeNames":["UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"UInt16.instLawfulUpwardEnumerable","typeNames":["UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"UInt16.instLawfulUpwardEnumerableLE","typeNames":["UInt16"]},{"className":"Std.LawfulOrderLT","name":"UInt16.instLawfulOrderLT_1","typeNames":["UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt16.instLawfulUpwardEnumerableLT","typeNames":["UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt16.instLawfulUpwardEnumerableLT_1","typeNames":["UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt16.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt16.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt16.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt16"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt16.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt16"]},{"className":"Std.PRange.RangeSize","name":"UInt16.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt16"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt16.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt16"]},{"className":"Std.PRange.RangeSize","name":"UInt16.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt16"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt16.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt16"]},{"className":"Std.PRange.UpwardEnumerable","name":"UInt32.instUpwardEnumerable","typeNames":["UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"UInt32.instLawfulUpwardEnumerable","typeNames":["UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"UInt32.instLawfulUpwardEnumerableLE","typeNames":["UInt32"]},{"className":"Std.LawfulOrderLT","name":"UInt32.instLawfulOrderLT_1","typeNames":["UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt32.instLawfulUpwardEnumerableLT","typeNames":["UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt32.instLawfulUpwardEnumerableLT_1","typeNames":["UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt32.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt32.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt32.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt32"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt32.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt32"]},{"className":"Std.PRange.RangeSize","name":"UInt32.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt32"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt32.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt32"]},{"className":"Std.PRange.RangeSize","name":"UInt32.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt32"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt32.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt32"]},{"className":"Std.PRange.UpwardEnumerable","name":"UInt64.instUpwardEnumerable","typeNames":["UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"UInt64.instLawfulUpwardEnumerable","typeNames":["UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"UInt64.instLawfulUpwardEnumerableLE","typeNames":["UInt64"]},{"className":"Std.LawfulOrderLT","name":"UInt64.instLawfulOrderLT_1","typeNames":["UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt64.instLawfulUpwardEnumerableLT","typeNames":["UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"UInt64.instLawfulUpwardEnumerableLT_1","typeNames":["UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt64.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt64.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"UInt64.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt64"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"UInt64.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","UInt64"]},{"className":"Std.PRange.RangeSize","name":"UInt64.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt64"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt64.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","UInt64"]},{"className":"Std.PRange.RangeSize","name":"UInt64.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt64"]},{"className":"Std.PRange.LawfulRangeSize","name":"UInt64.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","UInt64"]},{"className":"Std.PRange.UpwardEnumerable","name":"USize.instUpwardEnumerable","typeNames":["USize"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"USize.instLawfulUpwardEnumerable","typeNames":["USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"USize.instLawfulUpwardEnumerableLE","typeNames":["USize"]},{"className":"Std.LawfulOrderLT","name":"USize.instLawfulOrderLT_1","typeNames":["USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"USize.instLawfulUpwardEnumerableLT","typeNames":["USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"USize.instLawfulUpwardEnumerableLT_1","typeNames":["USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"USize.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"USize.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"USize.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","USize"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"USize.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","USize"]},{"className":"Std.PRange.RangeSize","name":"USize.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","USize"]},{"className":"Std.PRange.LawfulRangeSize","name":"USize.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","USize"]},{"className":"Std.PRange.RangeSize","name":"USize.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","USize"]},{"className":"Std.PRange.LawfulRangeSize","name":"USize.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","USize"]}],"name":"Init.Data.Range.Polymorphic.UInt"}