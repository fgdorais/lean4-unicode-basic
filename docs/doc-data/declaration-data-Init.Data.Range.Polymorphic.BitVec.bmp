{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulRangeSizeOpen\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulRangeSizeOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulRangeSizeOpen","kind":"instance","line":86,"name":"BitVec.instLawfulRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L86-L86"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulRangeSizeClosed\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulRangeSizeClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.LawfulRangeSize\">Std.PRange.LawfulRangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulRangeSizeClosed","kind":"instance","line":65,"name":"BitVec.instLawfulRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L65-L84"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instRangeSizeOpen\"><span class=\"name\">BitVec</span>.<span class=\"name\">instRangeSizeOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instRangeSizeOpen","kind":"instance","line":63,"name":"BitVec.instRangeSizeOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instRangeSizeClosed\"><span class=\"name\">BitVec</span>.<span class=\"name\">instRangeSizeClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/Basic.html#Std.PRange.RangeSize\">Std.PRange.RangeSize</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instRangeSizeClosed","kind":"instance","line":60,"name":"BitVec.instRangeSizeClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableUpperBoundOpen\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableUpperBoundOpen","kind":"instance","line":58,"name":"BitVec.instLawfulUpwardEnumerableUpperBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L58-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLowerBoundOpen\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.open\">Std.PRange.BoundShape.open</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLowerBoundOpen","kind":"instance","line":57,"name":"BitVec.instLawfulUpwardEnumerableLowerBoundOpen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L57-L57"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableUpperBoundClosed\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableUpperBoundClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableUpperBound\">Std.PRange.LawfulUpwardEnumerableUpperBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableUpperBoundClosed","kind":"instance","line":56,"name":"BitVec.instLawfulUpwardEnumerableUpperBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLowerBoundClosed\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableLowerBoundClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.LawfulUpwardEnumerableLowerBound\">Std.PRange.LawfulUpwardEnumerableLowerBound</a> <a href=\"./Init/Data/Range/Polymorphic/PRange.html#Std.PRange.BoundShape.closed\">Std.PRange.BoundShape.closed</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLowerBoundClosed","kind":"instance","line":55,"name":"BitVec.instLawfulUpwardEnumerableLowerBoundClosed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLT_1\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableLT_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLT_1","kind":"instance","line":54,"name":"BitVec.instLawfulUpwardEnumerableLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L54-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLT\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableLT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLT\">Std.PRange.LawfulUpwardEnumerableLT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLT","kind":"instance","line":53,"name":"BitVec.instLawfulUpwardEnumerableLT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulOrderLT_1\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulOrderLT_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Order/Classes.html#Std.LawfulOrderLT\">Std.LawfulOrderLT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulOrderLT_1","kind":"instance","line":52,"name":"BitVec.instLawfulOrderLT_1","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L52-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLE\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerableLE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerableLE\">Std.PRange.LawfulUpwardEnumerableLE</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerableLE","kind":"instance","line":42,"name":"BitVec.instLawfulUpwardEnumerableLE","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L42-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerable\"><span class=\"name\">BitVec</span>.<span class=\"name\">instLawfulUpwardEnumerable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.LawfulUpwardEnumerable\">Std.PRange.LawfulUpwardEnumerable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instLawfulUpwardEnumerable","kind":"instance","line":26,"name":"BitVec.instLawfulUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L26-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instUpwardEnumerable\"><span class=\"name\">BitVec</span>.<span class=\"name\">instUpwardEnumerable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Range/Polymorphic/UpwardEnumerable.html#Std.PRange.UpwardEnumerable\">Std.PRange.UpwardEnumerable</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Init/Data/Range/Polymorphic/BitVec.html#BitVec.instUpwardEnumerable","kind":"instance","line":22,"name":"BitVec.instUpwardEnumerable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/Data/Range/Polymorphic/BitVec.lean#L22-L24"}}],"imports":["Init.Data.Range.Polymorphic.Instances","Init.Data.Order.Lemmas","Init.Data.UInt","Init.Omega"],"instances":[{"className":"Std.PRange.UpwardEnumerable","name":"BitVec.instUpwardEnumerable","typeNames":["BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerable","name":"BitVec.instLawfulUpwardEnumerable","typeNames":["BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableLE","name":"BitVec.instLawfulUpwardEnumerableLE","typeNames":["BitVec"]},{"className":"Std.LawfulOrderLT","name":"BitVec.instLawfulOrderLT_1","typeNames":["BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"BitVec.instLawfulUpwardEnumerableLT","typeNames":["BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableLT","name":"BitVec.instLawfulUpwardEnumerableLT_1","typeNames":["BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"BitVec.instLawfulUpwardEnumerableLowerBoundClosed","typeNames":["Std.PRange.BoundShape.closed","BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"BitVec.instLawfulUpwardEnumerableUpperBoundClosed","typeNames":["Std.PRange.BoundShape.closed","BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableLowerBound","name":"BitVec.instLawfulUpwardEnumerableLowerBoundOpen","typeNames":["Std.PRange.BoundShape.open","BitVec"]},{"className":"Std.PRange.LawfulUpwardEnumerableUpperBound","name":"BitVec.instLawfulUpwardEnumerableUpperBoundOpen","typeNames":["Std.PRange.BoundShape.open","BitVec"]},{"className":"Std.PRange.RangeSize","name":"BitVec.instRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","BitVec"]},{"className":"Std.PRange.RangeSize","name":"BitVec.instRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","BitVec"]},{"className":"Std.PRange.LawfulRangeSize","name":"BitVec.instLawfulRangeSizeClosed","typeNames":["Std.PRange.BoundShape.closed","BitVec"]},{"className":"Std.PRange.LawfulRangeSize","name":"BitVec.instLawfulRangeSizeOpen","typeNames":["Std.PRange.BoundShape.open","BitVec"]}],"name":"Init.Data.Range.Polymorphic.BitVec"}