{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/RevertAll.html#Lean.MVarId.revertAll\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">revertAll</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mvarId</span> : <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">MVarId</a></span></div></div>","info":{"doc":"Reverts all free variables in the goal `mvarId`.\n**Remark**: Auxiliary local declarations are cleared.\nThe `grind` tactic also clears them, but this tactic can be used independently by users.\n","docLink":"./Lean/Meta/Tactic/Grind/RevertAll.html#Lean.MVarId.revertAll","kind":"def","line":14,"name":"Lean.MVarId.revertAll","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/RevertAll.lean#L14-L29"}}],"imports":["Lean.Meta.Tactic.Revert"],"instances":[],"name":"Lean.Meta.Tactic.Grind.RevertAll"}