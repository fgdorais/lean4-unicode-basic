{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getCommSemiringId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">getCommSemiringId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getCommSemiringId?","kind":"def","line":83,"name":"Lean.Meta.Grind.Arith.CommRing.getCommSemiringId?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.lean#L83-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getNonCommRingId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">getNonCommRingId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"Returns the ring id for the given type if there is a `Ring` instance for it.\nThis function is invoked only when `getCommRingId?` returns `none`.\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getNonCommRingId?","kind":"def","line":54,"name":"Lean.Meta.Grind.Arith.CommRing.getNonCommRingId?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.lean#L54-L78"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getCommRingId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Arith</span>.<span class=\"name\">CommRing</span>.<span class=\"name\">getCommRingId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>","info":{"doc":"Returns the ring id for the given type if there is a `CommRing` instance for it.\n\nThis function will also perform sanity-checks\n(e.g., the `Add` instance for `type` must be definitionally equal to the `CommRing.toAdd` one.)\n\nIt also caches the functions representing `+`, `*`, `-`, `^`, and `intCast`.\n","docLink":"./Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.html#Lean.Meta.Grind.Arith.CommRing.getCommRingId?","kind":"def","line":17,"name":"Lean.Meta.Grind.Arith.CommRing.getCommRingId?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Arith/CommRing/RingId.lean#L17-L52"}}],"imports":["Lean.Meta.Tactic.Grind.Arith.CommRing.RingM","Init.Grind.Ring.Field","Init.Grind.Ring.Envelope","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.SynthInstance","Lean.Meta.Tactic.Grind.Arith.Insts"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Arith.CommRing.RingId"}