{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.runIO\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">runIO</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Executes a term of type `IO α` at elaboration-time\nand produces an expression corresponding to the result via `ToExpr α`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.runIO","kind":"def","line":464,"name":"Lake.DSL.runIO","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L464-L468"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.metaIf\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">metaIf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `meta if` command has two forms:\n\n```lean\nmeta if <c:term> then <a:command>\nmeta if <c:term> then <a:command> else <b:command>\n```\n\nIt expands to the command `a` if the term `c` evaluates to true\n(at elaboration time). Otherwise, it expands to command `b` (if an `else`\nclause is provided).\n\nOne can use this command to specify, for example, external library targets\nonly available on specific platforms:\n\n```lean\nmeta if System.Platform.isWindows then\nextern_lib winOnlyLib := ...\nelse meta if System.Platform.isOSX then\nextern_lib macOnlyLib := ...\nelse\nextern_lib linuxOnlyLib := ...\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.metaIf","kind":"def","line":436,"name":"Lake.DSL.metaIf","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L436-L462"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.cmdDo\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">cmdDo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The `do` command syntax groups multiple similarly indented commands together.\nThe group can then be passed to another command that usually only accepts a\nsingle command (e.g., `meta if`).\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.cmdDo","kind":"def","line":429,"name":"Lake.DSL.cmdDo","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L429-L434"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.packageTargetKeyLit\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">packageTargetKeyLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"A package target key literal (with optional facet). ","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.packageTargetKeyLit","kind":"def","line":418,"name":"Lake.DSL.packageTargetKeyLit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L418-L421"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.moduleTargetKeyLit\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">moduleTargetKeyLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"A module target key literal (with optional facet). ","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.moduleTargetKeyLit","kind":"def","line":413,"name":"Lake.DSL.moduleTargetKeyLit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L413-L416"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.packageTargetLit\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">packageTargetLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.packageTargetLit","kind":"def","line":411,"name":"Lake.DSL.packageTargetLit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L411-L411"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.facetSuffix\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">facetSuffix</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.facetSuffix","kind":"def","line":410,"name":"Lake.DSL.facetSuffix","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L410-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.verLit\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">verLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"A Lake version literal. ","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.verLit","kind":"def","line":399,"name":"Lake.DSL.verLit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L399-L402"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.scriptDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">scriptDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new Lake script for the package.\n\n**Example**\n\n```\n/-- Display a greeting -/\nscript «script-name» (args) do\n  if h : 0 < args.length then\n    IO.println s!\"Hello, {args[0]'h}!\"\n  else\n    IO.println \"Hello, world!\"\n  return 0\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.scriptDecl","kind":"def","line":374,"name":"Lake.DSL.scriptDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L374-L391"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.scriptDeclSpec\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">scriptDeclSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.scriptDeclSpec","kind":"def","line":371,"name":"Lake.DSL.scriptDeclSpec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L371-L372"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.externLibCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">externLibCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new external library target for the package. Has one form:\n\n```lean\nextern_lib «target-name» (pkg : NPackage _package.name) :=\n  /- build term of type `FetchM (Job FilePath)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\nIt is of type `NPackage _package.name` to provably demonstrate the package\nprovided is the package in which the target is defined.\n\nThe term should build the external library's **static** library.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.externLibCommand","kind":"def","line":347,"name":"Lake.DSL.externLibCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L347-L363"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.externLibDeclSpec\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">externLibDeclSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.externLibDeclSpec","kind":"def","line":344,"name":"Lake.DSL.externLibDeclSpec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L344-L345"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoeInputDirCommandCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeInputDirCommandCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.InputDirCommand\">InputDirCommand</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoeInputDirCommandCommand","kind":"instance","line":336,"name":"Lake.DSL.instCoeInputDirCommandCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L336-L337"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.InputDirCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">InputDirCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Define a new input directory target for the package.\nCan optionally be provided with a configuration of type `InputDirConfig`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.InputDirCommand","kind":"def","line":333,"name":"Lake.DSL.InputDirCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L333-L334"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.inputDirCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">inputDirCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new input directory target for the package.\nCan optionally be provided with a configuration of type `InputDirConfig`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.inputDirCommand","kind":"def","line":325,"name":"Lake.DSL.inputDirCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L325-L331"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoeInputFileCommandCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeInputFileCommandCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.InputFileCommand\">InputFileCommand</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoeInputFileCommandCommand","kind":"instance","line":322,"name":"Lake.DSL.instCoeInputFileCommandCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L322-L323"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.InputFileCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">InputFileCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Define a new input file target for the package.\nCan optionally be provided with a configuration of type `InputFileConfig`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.InputFileCommand","kind":"def","line":319,"name":"Lake.DSL.InputFileCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L319-L320"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.inputFileCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">inputFileCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new input file target for the package.\nCan optionally be provided with a configuration of type `InputFileConfig`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.inputFileCommand","kind":"def","line":311,"name":"Lake.DSL.inputFileCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L311-L317"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoeLeanExeCommandCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeLeanExeCommandCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.LeanExeCommand\">LeanExeCommand</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoeLeanExeCommandCommand","kind":"instance","line":308,"name":"Lake.DSL.instCoeLeanExeCommandCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L308-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.LeanExeCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">LeanExeCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Define a new Lean binary executable target for the package.\nCan optionally be provided with a configuration of type `LeanExeConfig`.\nHas many forms:\n\n```lean\nlean_exe «target-name»\nlean_exe «target-name» { /- config opts -/ }\nlean_exe «target-name» where /- config opts -/\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.LeanExeCommand","kind":"def","line":305,"name":"Lake.DSL.LeanExeCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L305-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.leanExeCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">leanExeCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new Lean binary executable target for the package.\nCan optionally be provided with a configuration of type `LeanExeConfig`.\nHas many forms:\n\n```lean\nlean_exe «target-name»\nlean_exe «target-name» { /- config opts -/ }\nlean_exe «target-name» where /- config opts -/\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.leanExeCommand","kind":"def","line":290,"name":"Lake.DSL.leanExeCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L290-L303"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoeLeanLibCommandCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeLeanLibCommandCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.LeanLibCommand\">LeanLibCommand</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoeLeanLibCommandCommand","kind":"instance","line":287,"name":"Lake.DSL.instCoeLeanLibCommandCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L287-L288"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.LeanLibCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">LeanLibCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Define a new Lean library target for the package.\nCan optionally be provided with a configuration of type `LeanLibConfig`.\nHas many forms:\n\n```lean\nlean_lib «target-name»\nlean_lib «target-name» { /- config opts -/ }\nlean_lib «target-name» where /- config opts -/\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.LeanLibCommand","kind":"def","line":284,"name":"Lake.DSL.LeanLibCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L284-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.leanLibCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">leanLibCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new Lean library target for the package.\nCan optionally be provided with a configuration of type `LeanLibConfig`.\nHas many forms:\n\n```lean\nlean_lib «target-name»\nlean_lib «target-name» { /- config opts -/ }\nlean_lib «target-name» where /- config opts -/\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.leanLibCommand","kind":"def","line":269,"name":"Lake.DSL.leanLibCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L269-L282"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.targetCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">targetCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new custom target for the package. Has one form:\n\n```lean\ntarget «target-name» (pkg : NPackage _package.name) : α :=\n  /- build term of type `FetchM (Job α)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\nIt is of type `NPackage _package.name` to provably demonstrate the package\nprovided is the package in which the target is defined.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.targetCommand","kind":"def","line":248,"name":"Lake.DSL.targetCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L248-L262"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.libraryFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">libraryFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new library facet. Has one form:\n\n```lean\nlibrary_facet «facet-name» (lib : LeanLib) : α :=\n  /- build term of type `FetchM (Job α)` -/\n```\n\nThe `lib` parameter (and its type specifier) is optional.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.libraryFacetDecl","kind":"def","line":229,"name":"Lake.DSL.libraryFacetDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L229-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.packageFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">packageFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new package facet. Has one form:\n\n```lean\npackage_facet «facet-name» (pkg : Package) : α :=\n  /- build term of type `FetchM (Job α)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.packageFacetDecl","kind":"def","line":215,"name":"Lake.DSL.packageFacetDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L215-L227"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.moduleFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">moduleFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Define a new module facet. Has one form:\n\n```lean\nmodule_facet «facet-name» (mod : Module) : α :=\n  /- build term of type `FetchM (Job α)` -/\n```\n\nThe `mod` parameter (and its type specifier) is optional.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.moduleFacetDecl","kind":"def","line":201,"name":"Lake.DSL.moduleFacetDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L201-L213"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.buildDeclSig\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">buildDeclSig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.buildDeclSig","kind":"def","line":194,"name":"Lake.DSL.buildDeclSig","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L194-L195"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoeRequireDeclCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeRequireDeclCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.RequireDecl\">RequireDecl</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoeRequireDeclCommand","kind":"instance","line":186,"name":"Lake.DSL.instCoeRequireDeclCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L186-L187"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.RequireDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">RequireDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Adds a new package dependency to the workspace. The general syntax is:\n\n```\nrequire [\"<scope>\" /] <pkg-name> [@ <version>]\n  [from <source>] [with <options>]\n```\n\nThe `from` clause tells Lake where to locate the dependency.\nSee the `fromClause` syntax documentation (e.g., hover over it) to see\nthe different forms this clause can take.\n\nWithout a `from` clause, Lake will lookup the package in the default\nregistry (i.e., Reservoir) and use the information there to download the\npackage at the requested `version`. The `scope` is used to disambiguate between\npackages in the registry with the same `pkg-name`. In Reservoir, this scope\nis the package owner (e.g., `leanprover` of `@leanprover/doc-gen4`).\n\nThe `with` clause specifies a `NameMap String` of Lake options\nused to configure the dependency. This is equivalent to passing `-K`\noptions to the dependency on the command line.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.RequireDecl","kind":"def","line":183,"name":"Lake.DSL.RequireDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L183-L184"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.requireDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">requireDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Adds a new package dependency to the workspace. The general syntax is:\n\n```\nrequire [\"<scope>\" /] <pkg-name> [@ <version>]\n  [from <source>] [with <options>]\n```\n\nThe `from` clause tells Lake where to locate the dependency.\nSee the `fromClause` syntax documentation (e.g., hover over it) to see\nthe different forms this clause can take.\n\nWithout a `from` clause, Lake will lookup the package in the default\nregistry (i.e., Reservoir) and use the information there to download the\npackage at the requested `version`. The `scope` is used to disambiguate between\npackages in the registry with the same `pkg-name`. In Reservoir, this scope\nis the package owner (e.g., `leanprover` of `@leanprover/doc-gen4`).\n\nThe `with` clause specifies a `NameMap String` of Lake options\nused to configure the dependency. This is equivalent to passing `-K`\noptions to the dependency on the command line.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.requireDecl","kind":"def","line":157,"name":"Lake.DSL.requireDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L157-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.depSpec\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">depSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.depSpec","kind":"def","line":154,"name":"Lake.DSL.depSpec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L154-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.depName\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">depName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.depName","kind":"def","line":151,"name":"Lake.DSL.depName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L151-L152"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.verClause\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">verClause</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"The version of the package to require.\nTo specify a Git revision, use the syntax `@ git <rev>`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.verClause","kind":"def","line":144,"name":"Lake.DSL.verClause","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L144-L149"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.verSpec\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">verSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.verSpec","kind":"def","line":141,"name":"Lake.DSL.verSpec","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L141-L142"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.withClause\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">withClause</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.withClause","kind":"def","line":138,"name":"Lake.DSL.withClause","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L138-L139"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.fromClause\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">fromClause</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Specifies a specific source from which to draw the package dependency.\nDependencies that are downloaded from a remote source will be placed\ninto the workspace's `packagesDir`.\n\n**Path Dependencies**\n\n```\nfrom <path>\n```\n\nLake loads the package located a fixed `path` relative to the\nrequiring package's directory.\n\n**Git Dependencies**\n\n```\nfrom git <url> [@ <rev>] [/ <subDir>]\n```\n\nLake clones the Git repository available at the specified fixed Git `url`,\nand checks out the specified revision `rev`. The revision can be a commit hash,\nbranch, or tag. If none is provided, Lake defaults to `master`. After checkout,\nLake loads the package located in `subDir` (or the repository root if no\nsubdirectory is specified).\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.fromClause","kind":"def","line":105,"name":"Lake.DSL.fromClause","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L105-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.fromSource\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">fromSource</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.fromSource","kind":"def","line":102,"name":"Lake.DSL.fromSource","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L102-L103"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.fromGit\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">fromGit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.fromGit","kind":"def","line":99,"name":"Lake.DSL.fromGit","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L99-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.fromPath\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">fromPath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.fromPath","kind":"def","line":96,"name":"Lake.DSL.fromPath","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L96-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.postUpdateDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">postUpdateDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Declare a post-`lake update` hook for the package.\nRuns the monadic action is after a successful `lake update` execution\nin this package or one of its downstream dependents.\n\n**Example**\n\nThis feature enables Mathlib to synchronize the Lean toolchain and run\n`cache get` after a `lake update`:\n\n```\nlean_exe cache\npost_update pkg do\n  let wsToolchainFile := (← getRootPackage).dir / \"lean-toolchain\"\n  let mathlibToolchain ← IO.FS.readFile <| pkg.dir / \"lean-toolchain\"\n  IO.FS.writeFile wsToolchainFile mathlibToolchain\n  let exeFile ← runBuild cache.fetch\n  let exitCode ← env exeFile.toString #[\"get\"]\n  if exitCode ≠ 0 then\n    error s!\"{pkg.name}: failed to fetch cache\"\n```\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.postUpdateDecl","kind":"def","line":63,"name":"Lake.DSL.postUpdateDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L63-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.instCoePackageCommandCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoePackageCommandCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Syntax.html#Lake.DSL.PackageCommand\">PackageCommand</a> <a href=\"./Init/Meta/Defs.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>","info":{"doc":"","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.instCoePackageCommandCommand","kind":"instance","line":60,"name":"Lake.DSL.instCoePackageCommandCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L60-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.PackageCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">PackageCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Defines the configuration of a Lake package.  Has many forms:\n\n```lean\npackage «pkg-name»\npackage «pkg-name» { /- config opts -/ }\npackage «pkg-name» where /- config opts -/\n```\n\nThere can only be one `package` declaration per Lake configuration file.\nThe defined package configuration will be available for reference as `_package`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.PackageCommand","kind":"def","line":57,"name":"Lake.DSL.PackageCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L57-L58"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.packageCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">packageCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"Defines the configuration of a Lake package.  Has many forms:\n\n```lean\npackage «pkg-name»\npackage «pkg-name» { /- config opts -/ }\npackage «pkg-name» where /- config opts -/\n```\n\nThere can only be one `package` declaration per Lake configuration file.\nThe defined package configuration will be available for reference as `_package`.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.packageCommand","kind":"def","line":41,"name":"Lake.DSL.packageCommand","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L41-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.getConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">getConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"A macro that expands to the specified configuration option (or `none`,\nif the option has not been set) during the Lakefile's elaboration.\n\nConfiguration arguments are set either via the Lake CLI (by the `-K` option)\nor via the `with` clause in a `require` statement.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.getConfig","kind":"def","line":27,"name":"Lake.DSL.getConfig","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L27-L34"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Syntax.html#Lake.DSL.dirConst\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">dirConst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>","info":{"doc":"A macro that expands to the path of package's directory\nduring the Lakefile's elaboration.\n","docLink":"./Lake/DSL/Syntax.html#Lake.DSL.dirConst","kind":"def","line":21,"name":"Lake.DSL.dirConst","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/lake/Lake/DSL/Syntax.lean#L21-L25"}}],"imports":["Lake.DSL.DeclUtil"],"instances":[{"className":"Coe","name":"Lake.DSL.instCoePackageCommandCommand","typeNames":["Lake.DSL.PackageCommand","Lean.Syntax.Command"]},{"className":"Coe","name":"Lake.DSL.instCoeRequireDeclCommand","typeNames":["Lake.DSL.RequireDecl","Lean.Syntax.Command"]},{"className":"Coe","name":"Lake.DSL.instCoeLeanLibCommandCommand","typeNames":["Lake.DSL.LeanLibCommand","Lean.Syntax.Command"]},{"className":"Coe","name":"Lake.DSL.instCoeLeanExeCommandCommand","typeNames":["Lake.DSL.LeanExeCommand","Lean.Syntax.Command"]},{"className":"Coe","name":"Lake.DSL.instCoeInputFileCommandCommand","typeNames":["Lake.DSL.InputFileCommand","Lean.Syntax.Command"]},{"className":"Coe","name":"Lake.DSL.instCoeInputDirCommandCommand","typeNames":["Lake.DSL.InputDirCommand","Lean.Syntax.Command"]}],"name":"Lake.DSL.Syntax"}