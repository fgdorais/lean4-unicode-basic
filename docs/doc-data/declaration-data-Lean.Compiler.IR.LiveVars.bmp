{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.collectLiveVars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">collectLiveVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap\">JPLiveVarMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a> := <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.collectLiveVars","kind":"def","line":178,"name":"Lean.IR.collectLiveVars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L178-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.updateLiveVars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">updateLiveVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.updateLiveVars","kind":"def","line":174,"name":"Lean.IR.updateLiveVars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L174-L176"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.updateJPLiveVarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVars</span>.<span class=\"name\">updateJPLiveVarMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ys</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap\">JPLiveVarMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap\">JPLiveVarMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.updateJPLiveVarMap","kind":"opaque","line":162,"name":"Lean.IR.LiveVars.updateJPLiveVarMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L162-L168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVars</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.M","kind":"def","line":100,"name":"Lean.IR.LiveVars.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L100-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State.liveVars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVars</span>.<span class=\"name\">State</span>.<span class=\"name\">liveVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State.liveVars","kind":"def","line":98,"name":"Lean.IR.LiveVars.State.liveVars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L98-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVars</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">liveVars</span> : <a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State.mk","kind":"ctor","line":97,"name":"Lean.IR.LiveVars.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L97-L97"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVars</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVars.State","kind":"structure","line":97,"name":"Lean.IR.LiveVars.State","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L97-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.mkLiveVarSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">mkLiveVarSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\">LiveVarSet</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.mkLiveVarSet","kind":"def","line":92,"name":"Lean.IR.mkLiveVarSet","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L92-L93"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">JPLiveVarMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.JPLiveVarMap","kind":"def","line":90,"name":"Lean.IR.JPLiveVarMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">LiveVarSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.LiveVarSet","kind":"def","line":89,"name":"Lean.IR.LiveVarSet","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L89-L89"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.FnBody.hasLiveVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">hasLiveVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctx</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LocalContext\">LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Return true if `x` is live in the function body `b` in the context `ctx`.\n\nRemark: the context only needs to contain all (free) join point declarations.\n\nRecall that we say that a join point `j` is free in `b` if `b` contains\n`FnBody.jmp j ys` and `j` is not local. ","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.FnBody.hasLiveVar","kind":"def","line":80,"name":"Lean.IR.FnBody.hasLiveVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L80-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitFnBody\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitFnBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a> → <span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitFnBody","kind":"opaque","line":50,"name":"Lean.IR.IsLive.visitFnBody","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L50-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitExpr","kind":"def","line":48,"name":"Lean.IR.IsLive.visitExpr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L48-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">as</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArgs","kind":"def","line":47,"name":"Lean.IR.IsLive.visitArgs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L47-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitArg","kind":"def","line":46,"name":"Lean.IR.IsLive.visitArg","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L46-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitJP\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitJP</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitJP","kind":"def","line":45,"name":"Lean.IR.IsLive.visitJP","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">visitVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">w</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Index\">Index</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\">M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.visitVar","kind":"def","line":44,"name":"Lean.IR.IsLive.visitVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">IsLive</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"We use `State Context` instead of `ReaderT Context Id` because we remove\nnon local join points from `Context` whenever we visit them instead of\nmaintaining a set of visited non local join points.\n\nRemark: we don't need to track local join points because we assume there is\nno variable or join point shadowing in our IR.\n","docLink":"./Lean/Compiler/IR/LiveVars.html#Lean.IR.IsLive.M","kind":"def","line":34,"name":"Lean.IR.IsLive.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/LiveVars.lean#L34-L42"}}],"imports":["Lean.Compiler.IR.Basic","Lean.Compiler.IR.FreeVars"],"instances":[],"name":"Lean.Compiler.IR.LiveVars"}