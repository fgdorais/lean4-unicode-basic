{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Term.html#Lean.Elab.isIncrementalElab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">isIncrementalElab</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> â†’ <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Checks whether a declaration is annotated with `[builtin_incremental]` or `[incremental]`. ","docLink":"./Lean/Elab/Term.html#Lean.Elab.isIncrementalElab","kind":"def","line":73,"name":"Lean.Elab.isIncrementalElab","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/Term.lean#L73-L76"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Term.html#Lean.Elab.addBuiltinIncrementalElab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">addBuiltinIncrementalElab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Term.html#Lean.Elab.addBuiltinIncrementalElab","kind":"def","line":58,"name":"Lean.Elab.addBuiltinIncrementalElab","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/Term.lean#L58-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Term.html#Lean.Elab.builtinIncrementalElabs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">builtinIncrementalElabs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Data/NameMap/Basic.html#Lean.NameSet\">NameSet</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Term.html#Lean.Elab.builtinIncrementalElabs","kind":"opaque","line":56,"name":"Lean.Elab.builtinIncrementalElabs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/Term.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Term.html#Lean.Elab.incrementalAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">incrementalAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">TagAttribute</a></div></div>","info":{"doc":"Marks an elaborator (tactic or command, currently) as supporting incremental elaboration.\n\nFor unmarked elaborators, the corresponding snapshot bundle field in the elaboration context is\nunset so as to prevent accidental, incorrect reuse.\n","docLink":"./Lean/Elab/Term.html#Lean.Elab.incrementalAttr","kind":"opaque","line":44,"name":"Lean.Elab.incrementalAttr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/Term.lean#L44-L54"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Term.html#Lean.Elab.Term.expandDeclId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">expandDeclId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currNamespace</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">currLevelNames</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declId</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.ExpandDeclIdResult\">ExpandDeclIdResult</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/Term.html#Lean.Elab.Term.expandDeclId","kind":"def","line":32,"name":"Lean.Elab.Term.expandDeclId","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/Term.lean#L32-L36"}}],"imports":["Lean.ReservedNameAction","Lean.Meta.AppBuilder","Lean.Meta.CollectMVars","Lean.Meta.Coe","Lean.Util.CollectLevelMVars","Lean.Linter.Deprecated","Lean.Elab.Config","Lean.Elab.Level","Lean.Elab.DeclModifiers","Lean.Elab.PreDefinition.TerminationHint","Lean.Elab.DeclarationRange","Lean.Elab.WhereFinally","Lean.Language.Basic","Lean.Elab.InfoTree.InlayHints","Lean.Parser.Term","Lean.Elab.Term.TermElabM"],"instances":[],"name":"Lean.Elab.Term"}