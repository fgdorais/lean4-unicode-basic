{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/MetaAttr.html#Lean.getIRPhases\"><span class=\"name\">Lean</span>.<span class=\"name\">getIRPhases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.IRPhases\">IRPhases</a></div></div>","info":{"doc":"Returns the IR phases of the given declaration that should be considered accessible. Does not take\nadditional IR loaded for language server purposes into account.\n","docLink":"./Lean/Compiler/MetaAttr.html#Lean.getIRPhases","kind":"def","line":28,"name":"Lean.getIRPhases","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/MetaAttr.lean#L28-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/MetaAttr.html#Lean.isMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">isMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"Returns true iff the user has declared the given declaration as `meta`. ","docLink":"./Lean/Compiler/MetaAttr.html#Lean.isMeta","kind":"def","line":24,"name":"Lean.isMeta","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/MetaAttr.lean#L24-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/MetaAttr.html#Lean.addMeta\"><span class=\"name\">Lean</span>.<span class=\"name\">addMeta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">env</span> : <a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">declName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Environment</a></div></div>","info":{"doc":"Marks in the environment extension that the given declaration has been declared by the user as `meta`. ","docLink":"./Lean/Compiler/MetaAttr.html#Lean.addMeta","kind":"def","line":20,"name":"Lean.addMeta","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/MetaAttr.lean#L20-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/MetaAttr.html#Lean.metaExt\"><span class=\"name\">Lean</span>.<span class=\"name\">metaExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/EnvExtension.html#Lean.TagDeclarationExtension\">TagDeclarationExtension</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/MetaAttr.html#Lean.metaExt","kind":"opaque","line":15,"name":"Lean.metaExt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/MetaAttr.lean#L15-L18"}}],"imports":["Lean.EnvExtension"],"instances":[],"name":"Lean.Compiler.MetaAttr"}