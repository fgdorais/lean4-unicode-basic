{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.assertAll\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">assertAll</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Asserts all facts in the `goal` fact queue.\nReturns `true` if the queue was not empty and `false` otherwise.\n","docLink":"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.assertAll","kind":"def","line":287,"name":"Lean.Meta.Grind.assertAll","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Intro.lean#L287-L298"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.assertNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">assertNext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Asserts next fact in the `goal` fact queue.\nReturns `true` if the queue was not empty and `false` otherwise.\n","docLink":"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.assertNext","kind":"def","line":272,"name":"Lean.Meta.Grind.assertNext","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Intro.lean#L272-L285"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.intros'\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">intros'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">generation</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Similar to `intros`, but returns `true` if new hypotheses have been added,\nand `false` otherwise.\n","docLink":"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.intros'","kind":"def","line":249,"name":"Lean.Meta.Grind.intros'","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Intro.lean#L249-L257"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.intros\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">intros</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">generation</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/SearchM.html#Lean.Meta.Grind.SearchM\">SearchM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Introduce new hypotheses (and apply `by_contra`) until goal is of the form `... ‚ä¢ False`\nor is inconsistent.\n","docLink":"./Lean/Meta/Tactic/Grind/Intro.html#Lean.Meta.Grind.intros","kind":"def","line":218,"name":"Lean.Meta.Grind.intros","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/Intro.lean#L218-L247"}}],"imports":["Init.Grind.Lemmas","Lean.Meta.Tactic.Grind.Types","Lean.Meta.Tactic.Grind.SearchM","Lean.Meta.Tactic.Assert","Lean.Meta.Tactic.Apply","Lean.Meta.Tactic.Grind.Simp","Lean.Meta.Tactic.Grind.Cases","Lean.Meta.Tactic.Grind.CasesMatch","Lean.Meta.Tactic.Grind.Injection","Lean.Meta.Tactic.Grind.Core"],"instances":[],"name":"Lean.Meta.Tactic.Grind.Intro"}