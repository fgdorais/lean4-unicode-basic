{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instNoNatZeroDivisorsInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instNoNatZeroDivisorsInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Module/Basic.html#Lean.Grind.NoNatZeroDivisors\">NoNatZeroDivisors</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instNoNatZeroDivisorsInt","kind":"instance","line":39,"name":"Lean.Grind.instNoNatZeroDivisorsInt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/GrindInstances/Ring/Int.lean#L39-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instIsCharPIntOfNatNat\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instIsCharPIntOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.IsCharP\">IsCharP</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a> <span class=\"fn\">0</span></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instIsCharPIntOfNatNat","kind":"instance","line":36,"name":"Lean.Grind.instIsCharPIntOfNatNat","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/GrindInstances/Ring/Int.lean#L36-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instCommRingInt\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instCommRingInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Grind/Ring/Basic.html#Lean.Grind.CommRing\">CommRing</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>","info":{"doc":"","docLink":"./Init/GrindInstances/Ring/Int.html#Lean.Grind.instCommRingInt","kind":"instance","line":16,"name":"Lean.Grind.instCommRingInt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Init/GrindInstances/Ring/Int.lean#L16-L34"}}],"imports":["Init.Grind.Ring.Basic","Init.Data.Int.Lemmas"],"instances":[{"className":"Lean.Grind.CommRing","name":"Lean.Grind.instCommRingInt","typeNames":["Int"]},{"className":"Lean.Grind.IsCharP","name":"Lean.Grind.instIsCharPIntOfNatNat","typeNames":["Int","OfNat.ofNat"]},{"className":"Lean.Grind.NoNatZeroDivisors","name":"Lean.Grind.instNoNatZeroDivisorsInt","typeNames":["Int"]}],"name":"Init.GrindInstances.Ring.Int"}