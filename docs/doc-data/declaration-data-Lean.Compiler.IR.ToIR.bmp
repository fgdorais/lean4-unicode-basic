{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.toIR\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">toIR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Compiler.LCNF.Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.toIR","kind":"def","line":311,"name":"Lean.IR.toIR","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L311-L316"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerDecl","kind":"def","line":293,"name":"Lean.IR.ToIR.lowerDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L293-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerResultType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerResultType","kind":"def","line":282,"name":"Lean.IR.ToIR.lowerResultType","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L282-L291"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerAlt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">discr</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Alt\">Compiler.LCNF.Alt</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerAlt","kind":"opaque","line":255,"name":"Lean.IR.ToIR.lowerAlt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L255-L279"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">decl</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLet","kind":"opaque","line":131,"name":"Lean.IR.ToIR.lowerLet","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L131-L253"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerCode\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerCode","kind":"opaque","line":108,"name":"Lean.IR.ToIR.lowerCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L108-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerParam\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Compiler.LCNF.Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Param\">Param</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerParam","kind":"def","line":102,"name":"Lean.IR.ToIR.lowerParam","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L102-L105"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">base</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ctorInfo</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.CtorInfo\">CtorInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">field</span> : <a href=\"./Lean/Compiler/IR/ToIRType.html#Lean.IR.CtorFieldInfo\">CtorFieldInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerProj","kind":"def","line":94,"name":"Lean.IR.ToIR.lowerProj","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L94-L100"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj.default\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">instInhabitedTranslatedProj</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj.default","kind":"def","line":92,"name":"Lean.IR.ToIR.instInhabitedTranslatedProj.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">instInhabitedTranslatedProj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.instInhabitedTranslatedProj","kind":"instance","line":92,"name":"Lean.IR.ToIR.instInhabitedTranslatedProj","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L92-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.erased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.erased","kind":"ctor","line":91,"name":"Lean.IR.ToIR.TranslatedProj.erased","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L91-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.expr\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span>.<span class=\"name\">expr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\">TranslatedProj</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj.expr","kind":"ctor","line":90,"name":"Lean.IR.ToIR.TranslatedProj.expr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L90-L90"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">TranslatedProj</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.TranslatedProj","kind":"inductive","line":89,"name":"Lean.IR.ToIR.TranslatedProj","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L89-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerArg\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Compiler.LCNF.Arg</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerArg","kind":"def","line":84,"name":"Lean.IR.ToIR.lowerArg","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L84-L87"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLitValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">lowerLitValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v</span> : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LitValue\">Compiler.LCNF.LitValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.LitVal\">LitVal</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.IRType\">IRType</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.lowerLitValue","kind":"def","line":72,"name":"Lean.IR.ToIR.lowerLitValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L72-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.addDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">addDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.addDecl","kind":"def","line":69,"name":"Lean.IR.ToIR.addDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L69-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.findDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">findDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.findDecl","kind":"def","line":66,"name":"Lean.IR.ToIR.findDecl","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L66-L67"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindErased\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindErased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindErased","kind":"def","line":63,"name":"Lean.IR.ToIR.bindErased","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L63-L64"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindJoinPoint\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindJoinPoint</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindJoinPoint","kind":"def","line":57,"name":"Lean.IR.ToIR.bindJoinPoint","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L57-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.newVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">newVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.newVar","kind":"def","line":52,"name":"Lean.IR.ToIR.newVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L52-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVarToVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindVarToVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">varId</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVarToVarId","kind":"def","line":49,"name":"Lean.IR.ToIR.bindVarToVarId","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVar\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">bindVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.VarId\">VarId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.bindVar","kind":"def","line":43,"name":"Lean.IR.ToIR.bindVar","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L43-L47"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getJoinPointValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">getJoinPointValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getJoinPointValue","kind":"def","line":40,"name":"Lean.IR.ToIR.getJoinPointValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L40-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getFVarValue\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">getFVarValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fvarId</span> : <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.getFVarValue","kind":"def","line":37,"name":"Lean.IR.ToIR.getFVarValue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L37-L38"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M.run\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">M</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\">M</a> <span class=\"fn\">Î±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">Î±</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M.run","kind":"def","line":34,"name":"Lean.IR.ToIR.M.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L34-L35"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">Î±</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.M","kind":"def","line":32,"name":"Lean.IR.ToIR.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L32-L32"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.nextId\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">nextId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.nextId","kind":"def","line":30,"name":"Lean.IR.ToIR.BuilderState.nextId","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L30-L30"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.joinPoints\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">joinPoints</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.joinPoints","kind":"def","line":29,"name":"Lean.IR.ToIR.BuilderState.joinPoints","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.vars","kind":"def","line":28,"name":"Lean.IR.ToIR.BuilderState.vars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Arg\">Arg</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">joinPoints</span> : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.JoinPointId\">JoinPointId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nextId</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\">BuilderState</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState.mk","kind":"ctor","line":27,"name":"Lean.IR.ToIR.BuilderState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ToIR</span>.<span class=\"name\">BuilderState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/ToIR.html#Lean.IR.ToIR.BuilderState","kind":"structure","line":27,"name":"Lean.IR.ToIR.BuilderState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/ToIR.lean#L27-L30"}}],"imports":["Lean.Compiler.LCNF.Basic","Lean.Compiler.LCNF.CompilerM","Lean.Compiler.LCNF.PhaseExt","Lean.Compiler.IR.Basic","Lean.Compiler.IR.CompilerM","Lean.Compiler.IR.ToIRType","Lean.CoreM","Lean.Environment"],"instances":[{"className":"Inhabited","name":"Lean.IR.ToIR.instInhabitedTranslatedProj","typeNames":["Lean.IR.ToIR.TranslatedProj"]}],"name":"Lean.Compiler.IR.ToIR"}