{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseErrorWithData\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeResponseErrorWithData</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">Lean.JsonRpc.ResponseError</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseErrorWithData","kind":"def","line":469,"name":"IO.FS.Stream.writeResponseErrorWithData","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L469-L470"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseError\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeResponseError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">Lean.JsonRpc.ResponseError</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponseError","kind":"def","line":466,"name":"IO.FS.Stream.writeResponseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L466-L467"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponse\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeResponse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Lean.JsonRpc.Response</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeResponse","kind":"def","line":463,"name":"IO.FS.Stream.writeResponse","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L463-L464"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeNotification\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeNotification</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Lean.JsonRpc.Notification</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeNotification","kind":"def","line":460,"name":"IO.FS.Stream.writeNotification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L460-L461"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeRequest\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeRequest</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">Lean.ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Lean.JsonRpc.Request</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeRequest","kind":"def","line":457,"name":"IO.FS.Stream.writeRequest","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L457-L458"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeMessage\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">writeMessage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Lean.JsonRpc.Message</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.writeMessage","kind":"def","line":454,"name":"IO.FS.Stream.writeMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L454-L455"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.readResponseAs\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">readResponseAs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nBytes</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedID</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">Lean.JsonRpc.RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Lean.JsonRpc.Response</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readResponseAs","kind":"def","line":438,"name":"IO.FS.Stream.readResponseAs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L438-L448"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.readNotificationAs\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">readNotificationAs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nBytes</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedMethod</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Lean.JsonRpc.Notification</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readNotificationAs","kind":"def","line":425,"name":"IO.FS.Stream.readNotificationAs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L425-L436"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.readRequestAs\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">readRequestAs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nBytes</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">expectedMethod</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">Lean.FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Lean.JsonRpc.Request</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readRequestAs","kind":"def","line":412,"name":"IO.FS.Stream.readRequestAs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L412-L423"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#IO.FS.Stream.readMessage\"><span class=\"name\">IO</span>.<span class=\"name\">FS</span>.<span class=\"name\">Stream</span>.<span class=\"name\">readMessage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <a href=\"./Init/System/IO.html#IO.FS.Stream\">Stream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">nBytes</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Lean.JsonRpc.Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#IO.FS.Stream.readMessage","kind":"def","line":406,"name":"IO.FS.Stream.readMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L406-L410"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.parseMessageMetaData\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">parseMessageMetaData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">input</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></span></div></div>","info":{"doc":"Danger: For performance reasons, this function makes a number of fragile assumptions about `input`.\nNamely:\n- `input` is the output of `(toJson (v : Message)).compress`\n- `compress` yields a lexicographic ordering of JSON object keys\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.parseMessageMetaData","kind":"def","line":389,"name":"Lean.JsonRpc.parseMessageMetaData","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L389-L396"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.toMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span>.<span class=\"name\">toMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a> → <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.toMessage","kind":"def","line":311,"name":"Lean.JsonRpc.MessageMetaData.toMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L311-L315"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessageMetaData\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedMessageMetaData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessageMetaData","kind":"instance","line":309,"name":"Lean.JsonRpc.instInhabitedMessageMetaData","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L309-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessageMetaData.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedMessageMetaData</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessageMetaData.default","kind":"def","line":309,"name":"Lean.JsonRpc.instInhabitedMessageMetaData.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L309-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.responseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span>.<span class=\"name\">responseError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.responseError","kind":"ctor","line":308,"name":"Lean.JsonRpc.MessageMetaData.responseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L308-L308"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.response\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span>.<span class=\"name\">response</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.response","kind":"ctor","line":307,"name":"Lean.JsonRpc.MessageMetaData.response","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L307-L307"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.notification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span>.<span class=\"name\">notification</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.notification","kind":"ctor","line":306,"name":"Lean.JsonRpc.MessageMetaData.notification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L306-L306"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.request\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span>.<span class=\"name\">request</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\">MessageMetaData</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData.request","kind":"ctor","line":305,"name":"Lean.JsonRpc.MessageMetaData.request","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L305-L305"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">MessageMetaData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A variant of `Message` that has been parsed *partially*, without the payload.\nThis is useful when we want to process the metadata of a `Message` without parsing and converting\nthe whole thing.\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.MessageMetaData","kind":"inductive","line":299,"name":"Lean.JsonRpc.MessageMetaData","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L299-L309"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonNotification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instFromJsonNotification</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonNotification","kind":"instance","line":290,"name":"Lean.JsonRpc.instFromJsonNotification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L290-L297"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instFromJsonMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonMessage","kind":"instance","line":269,"name":"Lean.JsonRpc.instFromJsonMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L269-L287"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instToJsonMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonMessage","kind":"instance","line":249,"name":"Lean.JsonRpc.instToJsonMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L249-L267"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instToJsonRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonRequestID","kind":"instance","line":243,"name":"Lean.JsonRpc.instToJsonRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L243-L247"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instFromJsonRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonRequestID","kind":"instance","line":237,"name":"Lean.JsonRpc.instFromJsonRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L237-L241"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instDecidableLtRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instDecidableLtRequestID</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span>)</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instDecidableLtRequestID","kind":"instance","line":234,"name":"Lean.JsonRpc.instDecidableLtRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L234-L235"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instLTRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instLTRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instLTRequestID","kind":"instance","line":231,"name":"Lean.JsonRpc.instLTRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L231-L232"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.ltProp\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span>.<span class=\"name\">ltProp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#LT\">LT</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.ltProp","kind":"def","line":228,"name":"Lean.JsonRpc.RequestID.ltProp","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L228-L229"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.lt\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span>.<span class=\"name\">lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.lt","kind":"def","line":220,"name":"Lean.JsonRpc.RequestID.lt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L220-L226"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeJsonNumberRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeJsonNumberRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.JsonNumber\">JsonNumber</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeJsonNumberRequestID","kind":"instance","line":218,"name":"Lean.JsonRpc.instCoeJsonNumberRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L218-L218"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeStringRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeStringRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeStringRequestID","kind":"instance","line":217,"name":"Lean.JsonRpc.instCoeStringRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L217-L217"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.ofMessage?\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">ofMessage?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.ofMessage?","kind":"def","line":213,"name":"Lean.JsonRpc.ResponseError.ofMessage?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L213-L215"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseErrorUnitMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeOutResponseErrorUnitMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a>)</span> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseErrorUnitMessage","kind":"instance","line":210,"name":"Lean.JsonRpc.instCoeOutResponseErrorUnitMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L210-L211"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseErrorMessageOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeOutResponseErrorMessageOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span>)</span> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseErrorMessageOfToJson","kind":"instance","line":207,"name":"Lean.JsonRpc.instCoeOutResponseErrorMessageOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L207-L208"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqResponseError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponseError","kind":"instance","line":205,"name":"Lean.JsonRpc.instBEqResponseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponseError.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqResponseError</span>.<span class=\"name\">beq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α✝</span></span> → <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α✝</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponseError.beq","kind":"def","line":205,"name":"Lean.JsonRpc.instBEqResponseError.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedResponseError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponseError","kind":"instance","line":205,"name":"Lean.JsonRpc.instInhabitedResponseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponseError.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedResponseError</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponseError.default","kind":"def","line":205,"name":"Lean.JsonRpc.instInhabitedResponseError.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L205-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.data?\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">data?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"A primitive or structured value that contains additional\ninformation about the error. Can be omitted. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.data?","kind":"def","line":204,"name":"Lean.JsonRpc.ResponseError.data?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L204-L204"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.message\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">message</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"A string providing a short description of the error. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.message","kind":"def","line":201,"name":"Lean.JsonRpc.ResponseError.message","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L201-L201"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.code\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">code</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.code","kind":"def","line":199,"name":"Lean.JsonRpc.ResponseError.code","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L199-L199"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.id\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.id","kind":"def","line":198,"name":"Lean.JsonRpc.ResponseError.id","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L198-L198"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\">ResponseError</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError.mk","kind":"ctor","line":197,"name":"Lean.JsonRpc.ResponseError.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L197-L197"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ResponseError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Generic version of `Message.responseError`.\n\nReferences:\n- [JSON-RPC](https://www.jsonrpc.org/specification#error_object)\n- [LSP](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#responseError).\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ResponseError","kind":"structure","line":191,"name":"Lean.JsonRpc.ResponseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L191-L205"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.ofMessage?\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Response</span>.<span class=\"name\">ofMessage?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.ofMessage?","kind":"def","line":187,"name":"Lean.JsonRpc.Response.ofMessage?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L187-L189"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseMessageOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeOutResponseMessageOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α</span>)</span> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutResponseMessageOfToJson","kind":"instance","line":184,"name":"Lean.JsonRpc.instCoeOutResponseMessageOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L184-L185"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponse\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqResponse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponse","kind":"instance","line":182,"name":"Lean.JsonRpc.instBEqResponse","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponse.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqResponse</span>.<span class=\"name\">beq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α✝</span></span> → <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α✝</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqResponse.beq","kind":"def","line":182,"name":"Lean.JsonRpc.instBEqResponse.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponse\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedResponse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponse","kind":"instance","line":182,"name":"Lean.JsonRpc.instInhabitedResponse","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponse.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedResponse</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedResponse.default","kind":"def","line":182,"name":"Lean.JsonRpc.instInhabitedResponse.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L182-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.result\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Response</span>.<span class=\"name\">result</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.result","kind":"def","line":181,"name":"Lean.JsonRpc.Response.result","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L181-L181"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.id\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Response</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.id","kind":"def","line":180,"name":"Lean.JsonRpc.Response.id","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L180-L180"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Response</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\">Response</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response.mk","kind":"ctor","line":179,"name":"Lean.JsonRpc.Response.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L179-L179"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Response</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Generic version of `Message.response`.\n\nA Response Message sent as a result of a request. If a request doesn’t provide a\nresult value the receiver of a request still needs to return a response message\nto conform to the JSON-RPC specification. The result property of the ResponseMessage\nshould be set to null in this case to signal a successful request.\n\nReferences:\n- [JSON-RPC](https://www.jsonrpc.org/specification#response_object)\n- [LSP](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#responseMessage)\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Response","kind":"structure","line":168,"name":"Lean.JsonRpc.Response","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L168-L182"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.ofMessage?\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Notification</span>.<span class=\"name\">ofMessage?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.ofMessage?","kind":"def","line":161,"name":"Lean.JsonRpc.Notification.ofMessage?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L161-L166"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutNotificationMessageOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeOutNotificationMessageOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α</span>)</span> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutNotificationMessageOfToJson","kind":"instance","line":158,"name":"Lean.JsonRpc.instCoeOutNotificationMessageOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L158-L159"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqNotification.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqNotification</span>.<span class=\"name\">beq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α✝</span></span> → <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α✝</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqNotification.beq","kind":"def","line":156,"name":"Lean.JsonRpc.instBEqNotification.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L156-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqNotification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqNotification</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqNotification","kind":"instance","line":156,"name":"Lean.JsonRpc.instBEqNotification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L156-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedNotification.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedNotification</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedNotification.default","kind":"def","line":156,"name":"Lean.JsonRpc.instInhabitedNotification.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L156-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedNotification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedNotification</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedNotification","kind":"instance","line":156,"name":"Lean.JsonRpc.instInhabitedNotification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L156-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.param\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Notification</span>.<span class=\"name\">param</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.param","kind":"def","line":155,"name":"Lean.JsonRpc.Notification.param","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L155-L155"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.method\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Notification</span>.<span class=\"name\">method</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.method","kind":"def","line":154,"name":"Lean.JsonRpc.Notification.method","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L154-L154"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Notification</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\">Notification</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification.mk","kind":"ctor","line":153,"name":"Lean.JsonRpc.Notification.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L153-L153"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Notification</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Generic version of `Message.notification`.\n\nA notification message. A processed notification message must not send a response back. They work like events.\n\n- [JSON-RPC](https://www.jsonrpc.org/specification#notification)\n- [LSP](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#notificationMessage).\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Notification","kind":"structure","line":146,"name":"Lean.JsonRpc.Notification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L146-L156"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.ofMessage?\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span>.<span class=\"name\">ofMessage?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.ofMessage?","kind":"def","line":138,"name":"Lean.JsonRpc.Request.ofMessage?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L138-L144"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutRequestMessageOfToJson\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instCoeOutRequestMessageOfToJson</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeOut\">CoeOut</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α</span>)</span> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instCoeOutRequestMessageOfToJson","kind":"instance","line":135,"name":"Lean.JsonRpc.instCoeOutRequestMessageOfToJson","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L135-L136"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequest.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqRequest</span>.<span class=\"name\">beq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α✝</span></span> → <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α✝</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequest.beq","kind":"def","line":133,"name":"Lean.JsonRpc.instBEqRequest.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqRequest</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequest","kind":"instance","line":133,"name":"Lean.JsonRpc.instBEqRequest","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedRequest</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">a✝</span>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequest","kind":"instance","line":133,"name":"Lean.JsonRpc.instInhabitedRequest","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequest.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedRequest</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">a✝</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">a✝</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequest.default","kind":"def","line":133,"name":"Lean.JsonRpc.instInhabitedRequest.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L133-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.param\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span>.<span class=\"name\">param</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.param","kind":"def","line":132,"name":"Lean.JsonRpc.Request.param","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L132-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.method\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span>.<span class=\"name\">method</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.method","kind":"def","line":131,"name":"Lean.JsonRpc.Request.method","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L131-L131"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.id\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.id","kind":"def","line":130,"name":"Lean.JsonRpc.Request.id","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L130-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">param</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\">Request</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request.mk","kind":"ctor","line":129,"name":"Lean.JsonRpc.Request.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L129-L129"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Request</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>","info":{"doc":"Generic version of `Message.request`.\n\nA request message to describe a request between the client and the server. Every processed request must send a response back to the sender of the request.\n\n- [LSP](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#requestMessage)\n- [JSON-RPC](https://www.jsonrpc.org/specification#request_object)\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Request","kind":"structure","line":122,"name":"Lean.JsonRpc.Request","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L122-L133"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Batch\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Batch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Batch","kind":"def","line":120,"name":"Lean.JsonRpc.Batch","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L120-L120"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessage.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedMessage</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessage.default","kind":"def","line":118,"name":"Lean.JsonRpc.instInhabitedMessage.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessage\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedMessage</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedMessage","kind":"instance","line":118,"name":"Lean.JsonRpc.instInhabitedMessage","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L118-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.responseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Message</span>.<span class=\"name\">responseError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">code</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">message</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">data?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></div></div>","info":{"doc":"A non-successful response. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.responseError","kind":"ctor","line":116,"name":"Lean.JsonRpc.Message.responseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L116-L117"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.response\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Message</span>.<span class=\"name\">response</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">result</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></div></div>","info":{"doc":"A Response Message sent as a result of a request. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.response","kind":"ctor","line":114,"name":"Lean.JsonRpc.Message.response","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L114-L115"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.notification\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Message</span>.<span class=\"name\">notification</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json.Structured\">Json.Structured</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></div></div>","info":{"doc":"A notification message. A processed notification message must not send a response back. They work like events. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.notification","kind":"ctor","line":112,"name":"Lean.JsonRpc.Message.notification","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L112-L113"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.request\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Message</span>.<span class=\"name\">request</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">id</span> : <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">method</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">params?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json.Structured\">Json.Structured</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\">Message</a></div></div>","info":{"doc":"A request message to describe a request between the client and the server. Every processed request must send a response back to the sender of the request. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message.request","kind":"ctor","line":110,"name":"Lean.JsonRpc.Message.request","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L110-L111"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">Message</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A JSON-RPC message.\n\nUses separate constructors for notifications and errors because client and server\nbehavior is expected to be wildly different for both.\n","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.Message","kind":"inductive","line":104,"name":"Lean.JsonRpc.Message","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L104-L118"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instToJsonErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.ToJson\">ToJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToJsonErrorCode","kind":"instance","line":90,"name":"Lean.JsonRpc.instToJsonErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L90-L102"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instFromJsonErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson/Basic.html#Lean.FromJson\">FromJson</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instFromJsonErrorCode","kind":"instance","line":75,"name":"Lean.JsonRpc.instFromJsonErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L75-L88"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqErrorCode","kind":"instance","line":73,"name":"Lean.JsonRpc.instBEqErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqErrorCode.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqErrorCode</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a> → <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqErrorCode.beq","kind":"def","line":73,"name":"Lean.JsonRpc.instBEqErrorCode.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedErrorCode.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedErrorCode</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedErrorCode.default","kind":"def","line":73,"name":"Lean.JsonRpc.instInhabitedErrorCode.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedErrorCode","kind":"instance","line":73,"name":"Lean.JsonRpc.instInhabitedErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L73-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.workerCrashed\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">workerCrashed</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.workerCrashed","kind":"ctor","line":72,"name":"Lean.JsonRpc.ErrorCode.workerCrashed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.workerExited\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">workerExited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.workerExited","kind":"ctor","line":71,"name":"Lean.JsonRpc.ErrorCode.workerExited","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.rpcNeedsReconnect\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">rpcNeedsReconnect</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.rpcNeedsReconnect","kind":"ctor","line":70,"name":"Lean.JsonRpc.ErrorCode.rpcNeedsReconnect","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L70-L70"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.requestCancelled\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">requestCancelled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"The client has canceled a request and a server as detected the cancel. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.requestCancelled","kind":"ctor","line":67,"name":"Lean.JsonRpc.ErrorCode.requestCancelled","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L67-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.contentModified\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">contentModified</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"The server detected that the content of a document got\nmodified outside normal conditions. A server should\nNOT send this error code if it detects a content change\nin it unprocessed messages. The result even computed\non an older state might still be useful for the client.\n\nIf a client decides that a result is not of any use anymore\nthe client should cancel the request. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.contentModified","kind":"ctor","line":58,"name":"Lean.JsonRpc.ErrorCode.contentModified","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L58-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.unknownErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">unknownErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.unknownErrorCode","kind":"ctor","line":56,"name":"Lean.JsonRpc.ErrorCode.unknownErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.serverNotInitialized\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">serverNotInitialized</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"Error code indicating that a server received a notification or\nrequest before the server has received the `initialize` request. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.serverNotInitialized","kind":"ctor","line":53,"name":"Lean.JsonRpc.ErrorCode.serverNotInitialized","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L53-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.internalError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">internalError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"Internal JSON-RPC error. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.internalError","kind":"ctor","line":51,"name":"Lean.JsonRpc.ErrorCode.internalError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L51-L52"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.invalidParams\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">invalidParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"Invalid method parameter(s). ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.invalidParams","kind":"ctor","line":49,"name":"Lean.JsonRpc.ErrorCode.invalidParams","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L49-L50"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.methodNotFound\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">methodNotFound</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"The method does not exist / is not available. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.methodNotFound","kind":"ctor","line":47,"name":"Lean.JsonRpc.ErrorCode.methodNotFound","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.invalidRequest\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">invalidRequest</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"The JSON sent is not a valid Request object. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.invalidRequest","kind":"ctor","line":45,"name":"Lean.JsonRpc.ErrorCode.invalidRequest","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L45-L46"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.parseError\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span>.<span class=\"name\">parseError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\">ErrorCode</a></div></div>","info":{"doc":"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode.parseError","kind":"ctor","line":43,"name":"Lean.JsonRpc.ErrorCode.parseError","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L43-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">ErrorCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Error codes defined by\n[JSON-RPC](https://www.jsonrpc.org/specification#error_object) and\n[LSP](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#errorCodes). ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.ErrorCode","kind":"inductive","line":39,"name":"Lean.JsonRpc.ErrorCode","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L39-L73"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToStringRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instToStringRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instToStringRequestID","kind":"instance","line":33,"name":"Lean.JsonRpc.instToStringRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L33-L37"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOfNatRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instOfNatRequestID</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat\">OfNat</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> <span class=\"fn\">n</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOfNatRequestID","kind":"instance","line":31,"name":"Lean.JsonRpc.instOfNatRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L31-L31"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOrdRequestID.ord\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instOrdRequestID</span>.<span class=\"name\">ord</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Init/Data/Ord/Basic.html#Ordering\">Ordering</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOrdRequestID.ord","kind":"def","line":29,"name":"Lean.JsonRpc.instOrdRequestID.ord","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOrdRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instOrdRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord/Basic.html#Ord\">Ord</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instOrdRequestID","kind":"instance","line":29,"name":"Lean.JsonRpc.instOrdRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequestID.beq\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqRequestID</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequestID.beq","kind":"def","line":29,"name":"Lean.JsonRpc.instBEqRequestID.beq","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instBEqRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instBEqRequestID","kind":"instance","line":29,"name":"Lean.JsonRpc.instBEqRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedRequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequestID","kind":"instance","line":29,"name":"Lean.JsonRpc.instInhabitedRequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequestID.default\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">instInhabitedRequestID</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.instInhabitedRequestID.default","kind":"def","line":29,"name":"Lean.JsonRpc.instInhabitedRequestID.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L29-L29"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.null\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span>.<span class=\"name\">null</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.null","kind":"ctor","line":28,"name":"Lean.JsonRpc.RequestID.null","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L28-L28"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.num\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Lean/Data/Json/Basic.html#Lean.JsonNumber\">JsonNumber</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.num","kind":"ctor","line":27,"name":"Lean.JsonRpc.RequestID.num","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.str\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span>.<span class=\"name\">str</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\">RequestID</a></div></div>","info":{"doc":"","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID.str","kind":"ctor","line":26,"name":"Lean.JsonRpc.RequestID.str","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L26-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID\"><span class=\"name\">Lean</span>.<span class=\"name\">JsonRpc</span>.<span class=\"name\">RequestID</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"In JSON-RPC, each request from the client editor to the language server comes with a\nrequest id so that the corresponding response can be identified or cancelled. ","docLink":"./Lean/Data/JsonRpc.html#Lean.JsonRpc.RequestID","kind":"inductive","line":23,"name":"Lean.JsonRpc.RequestID","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Data/JsonRpc.lean#L23-L29"}}],"imports":["Init.System.IO","Lean.Data.Json.Stream","Lean.Data.Json.FromToJson.Basic"],"instances":[{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"Ord","name":"Lean.JsonRpc.instOrdRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"OfNat","name":"Lean.JsonRpc.instOfNatRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"ToString","name":"Lean.JsonRpc.instToStringRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedErrorCode","typeNames":["Lean.JsonRpc.ErrorCode"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqErrorCode","typeNames":["Lean.JsonRpc.ErrorCode"]},{"className":"Lean.FromJson","name":"Lean.JsonRpc.instFromJsonErrorCode","typeNames":["Lean.JsonRpc.ErrorCode"]},{"className":"Lean.ToJson","name":"Lean.JsonRpc.instToJsonErrorCode","typeNames":["Lean.JsonRpc.ErrorCode"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedMessage","typeNames":["Lean.JsonRpc.Message"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedRequest","typeNames":["Lean.JsonRpc.Request"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqRequest","typeNames":["Lean.JsonRpc.Request"]},{"className":"CoeOut","name":"Lean.JsonRpc.instCoeOutRequestMessageOfToJson","typeNames":["Lean.JsonRpc.Request","Lean.JsonRpc.Message"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedNotification","typeNames":["Lean.JsonRpc.Notification"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqNotification","typeNames":["Lean.JsonRpc.Notification"]},{"className":"CoeOut","name":"Lean.JsonRpc.instCoeOutNotificationMessageOfToJson","typeNames":["Lean.JsonRpc.Notification","Lean.JsonRpc.Message"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedResponse","typeNames":["Lean.JsonRpc.Response"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqResponse","typeNames":["Lean.JsonRpc.Response"]},{"className":"CoeOut","name":"Lean.JsonRpc.instCoeOutResponseMessageOfToJson","typeNames":["Lean.JsonRpc.Response","Lean.JsonRpc.Message"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedResponseError","typeNames":["Lean.JsonRpc.ResponseError"]},{"className":"BEq","name":"Lean.JsonRpc.instBEqResponseError","typeNames":["Lean.JsonRpc.ResponseError"]},{"className":"CoeOut","name":"Lean.JsonRpc.instCoeOutResponseErrorMessageOfToJson","typeNames":["Lean.JsonRpc.ResponseError","Lean.JsonRpc.Message"]},{"className":"CoeOut","name":"Lean.JsonRpc.instCoeOutResponseErrorUnitMessage","typeNames":["Lean.JsonRpc.ResponseError","Lean.JsonRpc.Message"]},{"className":"Coe","name":"Lean.JsonRpc.instCoeStringRequestID","typeNames":["String","Lean.JsonRpc.RequestID"]},{"className":"Coe","name":"Lean.JsonRpc.instCoeJsonNumberRequestID","typeNames":["Lean.JsonNumber","Lean.JsonRpc.RequestID"]},{"className":"LT","name":"Lean.JsonRpc.instLTRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"Decidable","name":"Lean.JsonRpc.instDecidableLtRequestID","typeNames":["LT.lt"]},{"className":"Lean.FromJson","name":"Lean.JsonRpc.instFromJsonRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"Lean.ToJson","name":"Lean.JsonRpc.instToJsonRequestID","typeNames":["Lean.JsonRpc.RequestID"]},{"className":"Lean.ToJson","name":"Lean.JsonRpc.instToJsonMessage","typeNames":["Lean.JsonRpc.Message"]},{"className":"Lean.FromJson","name":"Lean.JsonRpc.instFromJsonMessage","typeNames":["Lean.JsonRpc.Message"]},{"className":"Lean.FromJson","name":"Lean.JsonRpc.instFromJsonNotification","typeNames":["Lean.JsonRpc.Notification"]},{"className":"Inhabited","name":"Lean.JsonRpc.instInhabitedMessageMetaData","typeNames":["Lean.JsonRpc.MessageMetaData"]}],"name":"Lean.Data.JsonRpc"}