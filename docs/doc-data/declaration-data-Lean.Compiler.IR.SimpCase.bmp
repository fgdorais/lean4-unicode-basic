{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/SimpCase.html#Lean.IR.Decl.simpCase\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">Decl</span>.<span class=\"name\">simpCase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">d</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Decl\">Decl</a></div></div>","info":{"doc":"Simplify `case`\n- Remove unreachable branches.\n- Remove `case` if there is only one branch.\n- Merge most common branches using `Alt.default`. ","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.Decl.simpCase","kind":"def","line":73,"name":"Lean.IR.Decl.simpCase","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/SimpCase.lean#L73-L80"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/SimpCase.html#Lean.IR.FnBody.simpCase\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">FnBody</span>.<span class=\"name\">simpCase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">b</span> : <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.FnBody\">FnBody</a></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.FnBody.simpCase","kind":"opaque","line":64,"name":"Lean.IR.FnBody.simpCase","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/SimpCase.lean#L64-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/IR/SimpCase.html#Lean.IR.ensureHasDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">IR</span>.<span class=\"name\">ensureHasDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">alts</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/IR/Basic.html#Lean.IR.Alt\">Alt</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Compiler/IR/SimpCase.html#Lean.IR.ensureHasDefault","kind":"def","line":16,"name":"Lean.IR.ensureHasDefault","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Compiler/IR/SimpCase.lean#L16-L22"}}],"imports":["Lean.Compiler.IR.Basic","Lean.Compiler.IR.Format"],"instances":[],"name":"Lean.Compiler.IR.SimpCase"}