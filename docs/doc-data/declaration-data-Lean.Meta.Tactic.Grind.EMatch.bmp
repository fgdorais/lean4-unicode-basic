{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.ematch\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">ematch</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"Performs one round of E-matching, and returns `true` if new instances were generated. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.ematch","kind":"def","line":716,"name":"Lean.Meta.Grind.ematch","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L716-L720"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.ematchTheorems\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">ematchTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thms</span> : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">PArray</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheorem\">EMatchTheorem</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.ematchTheorems","kind":"def","line":693,"name":"Lean.Meta.Grind.EMatch.ematchTheorems","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L693-L694"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.ematchTheorem\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">ematchTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheorem\">EMatchTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M\">M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.ematchTheorem","kind":"def","line":668,"name":"Lean.Meta.Grind.EMatch.ematchTheorem","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L668-L691"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.GenPatternInfo.assign?\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">GenPatternInfo</span>.<span class=\"name\">assign?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">genInfo</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.GenPatternInfo\">GenPatternInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">EMatch.Choice</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Option.html#OptionT\">OptionT</a> <a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">EMatch.Choice</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.GenPatternInfo.assign?","kind":"def","line":127,"name":"Lean.Meta.Grind.GenPatternInfo.assign?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L127-L130"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M.run'\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">M</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M\">M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Tactic/Grind/Types.html#Lean.Meta.Grind.GoalM\">GoalM</a> <span class=\"fn\">α</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M.run'","kind":"def","line":76,"name":"Lean.Meta.Grind.EMatch.M.run'","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L76-L77"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.M","kind":"def","line":74,"name":"Lean.Meta.Grind.EMatch.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L74-L74"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedSearchState.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedSearchState</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState\">SearchState</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedSearchState.default","kind":"def","line":72,"name":"Lean.Meta.Grind.EMatch.instInhabitedSearchState.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedSearchState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedSearchState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState\">SearchState</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedSearchState","kind":"instance","line":72,"name":"Lean.Meta.Grind.EMatch.instInhabitedSearchState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L72-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState.choiceStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">SearchState</span>.<span class=\"name\">choiceStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState\">SearchState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a></span></div></div>","info":{"doc":"Choices that still have to be processed. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState.choiceStack","kind":"def","line":71,"name":"Lean.Meta.Grind.EMatch.SearchState.choiceStack","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L71-L71"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">SearchState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">choiceStack</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState\">SearchState</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState.mk","kind":"ctor","line":69,"name":"Lean.Meta.Grind.EMatch.SearchState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L69-L69"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">SearchState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"State for the E-matching monad ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.SearchState","kind":"structure","line":68,"name":"Lean.Meta.Grind.EMatch.SearchState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L68-L72"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedContext","kind":"instance","line":66,"name":"Lean.Meta.Grind.EMatch.instInhabitedContext","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedContext.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedContext</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedContext.default","kind":"def","line":66,"name":"Lean.Meta.Grind.EMatch.instInhabitedContext.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L66-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.initApp\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Context</span>.<span class=\"name\">initApp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Initial application used to start E-matching ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.initApp","kind":"def","line":65,"name":"Lean.Meta.Grind.EMatch.Context.initApp","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L65-L65"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.thm\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Context</span>.<span class=\"name\">thm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheorem\">EMatchTheorem</a></div></div>","info":{"doc":"`EMatchTheorem` being processed. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.thm","kind":"def","line":63,"name":"Lean.Meta.Grind.EMatch.Context.thm","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L63-L63"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.useMT\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Context</span>.<span class=\"name\">useMT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"`useMT` is `true` if we are using the mod-time optimization. It is always set to false for new `EMatchTheorem`s. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.useMT","kind":"def","line":61,"name":"Lean.Meta.Grind.EMatch.Context.useMT","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L61-L61"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useMT</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">thm</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.EMatchTheorem\">EMatchTheorem</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">initApp</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\">Context</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context.mk","kind":"ctor","line":59,"name":"Lean.Meta.Grind.EMatch.Context.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L59-L59"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Context for the E-matching monad. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Context","kind":"structure","line":58,"name":"Lean.Meta.Grind.EMatch.Context","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L58-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedChoice\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedChoice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedChoice","kind":"instance","line":56,"name":"Lean.Meta.Grind.EMatch.instInhabitedChoice","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedChoice.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedChoice</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedChoice.default","kind":"def","line":56,"name":"Lean.Meta.Grind.EMatch.instInhabitedChoice.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L56-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.assignment\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Choice</span>.<span class=\"name\">assignment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"Partial assignment so far. Recall that pattern variables are encoded as de-Bruijn variables. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.assignment","kind":"def","line":55,"name":"Lean.Meta.Grind.EMatch.Choice.assignment","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L55-L55"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.gen\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Choice</span>.<span class=\"name\">gen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>","info":{"doc":"Maximum term generation found so far. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.gen","kind":"def","line":53,"name":"Lean.Meta.Grind.EMatch.Choice.gen","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L53-L53"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.cnstrs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Choice</span>.<span class=\"name\">cnstrs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></span></div></div>","info":{"doc":"Constraints to be processed. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.cnstrs","kind":"def","line":51,"name":"Lean.Meta.Grind.EMatch.Choice.cnstrs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L51-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Choice</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">cnstrs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gen</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">assignment</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\">Choice</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice.mk","kind":"ctor","line":49,"name":"Lean.Meta.Grind.EMatch.Choice.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L49-L49"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Choice</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Choice point for the backtracking search.\nThe state of the procedure contains a stack of choices.\n","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Choice","kind":"structure","line":45,"name":"Lean.Meta.Grind.EMatch.Choice","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L45-L56"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedCnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedCnstr","kind":"instance","line":27,"name":"Lean.Meta.Grind.EMatch.instInhabitedCnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedCnstr.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">instInhabitedCnstr</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></div></div>","info":{"doc":"","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.instInhabitedCnstr.default","kind":"def","line":27,"name":"Lean.Meta.Grind.EMatch.instInhabitedCnstr.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L27-L27"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.continue\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">continue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></div></div>","info":{"doc":"This constraint is used to encode multi-patterns. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.continue","kind":"ctor","line":25,"name":"Lean.Meta.Grind.EMatch.Cnstr.continue","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L25-L26"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.offset\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">offset</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gen?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.GenPatternInfo\">GenPatternInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></div></div>","info":{"doc":"Matches offset pattern `pat+k` with term `e` ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.offset","kind":"ctor","line":23,"name":"Lean.Meta.Grind.EMatch.Cnstr.offset","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L23-L24"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.match\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Cnstr</span>.<span class=\"name\">match</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">gen?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Meta/Tactic/Grind/EMatchTheorem.html#Lean.Meta.Grind.GenPatternInfo\">GenPatternInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">pat </span><span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\">Cnstr</a></div></div>","info":{"doc":"Matches pattern `pat` with term `e` ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr.match","kind":"ctor","line":21,"name":"Lean.Meta.Grind.EMatch.Cnstr.match","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L21-L22"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Grind</span>.<span class=\"name\">EMatch</span>.<span class=\"name\">Cnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"We represent an `E-matching` problem as a list of constraints. ","docLink":"./Lean/Meta/Tactic/Grind/EMatch.html#Lean.Meta.Grind.EMatch.Cnstr","kind":"inductive","line":19,"name":"Lean.Meta.Grind.EMatch.Cnstr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Meta/Tactic/Grind/EMatch.lean#L19-L27"}}],"imports":["Lean.Meta.Tactic.Grind.Types","Lean.Util.CollectLevelMVars","Lean.Meta.Tactic.Grind.Core","Lean.Meta.Tactic.Grind.MatchDiscrOnly","Lean.Meta.Tactic.Grind.ProveEq","Lean.Meta.Tactic.Grind.SynthInstance"],"instances":[{"className":"Inhabited","name":"Lean.Meta.Grind.EMatch.instInhabitedCnstr","typeNames":["Lean.Meta.Grind.EMatch.Cnstr"]},{"className":"Inhabited","name":"Lean.Meta.Grind.EMatch.instInhabitedChoice","typeNames":["Lean.Meta.Grind.EMatch.Choice"]},{"className":"Inhabited","name":"Lean.Meta.Grind.EMatch.instInhabitedContext","typeNames":["Lean.Meta.Grind.EMatch.Context"]},{"className":"Inhabited","name":"Lean.Meta.Grind.EMatch.instInhabitedSearchState","typeNames":["Lean.Meta.Grind.EMatch.SearchState"]}],"name":"Lean.Meta.Tactic.Grind.EMatch"}