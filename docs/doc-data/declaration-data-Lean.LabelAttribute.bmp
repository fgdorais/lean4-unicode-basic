{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.labelled\"><span class=\"name\">Lean</span>.<span class=\"name\">labelled</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span></div></div>","info":{"doc":"When `attrName` is an attribute created using `register_labelled_attr`,\nreturn the names of all declarations labelled using that attribute. ","docLink":"./Lean/LabelAttribute.html#Lean.labelled","kind":"def","line":94,"name":"Lean.labelled","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L94-L99"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.Parser.Command.registerLabelAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Command</span>.<span class=\"name\">registerLabelAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">ParserDescr</a></div></div>","info":{"doc":"Initialize a new \"label\" attribute.\nDeclarations tagged with the attribute can be retrieved using `Lean.labelled`.\n","docLink":"./Lean/LabelAttribute.html#Lean.Parser.Command.registerLabelAttr","kind":"def","line":85,"name":"Lean.Parser.Command.registerLabelAttr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L85-L92"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.registerLabelAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">registerLabelAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrDescr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/LabelAttribute.html#Lean.LabelExtension\">LabelExtension</a></span></div></div>","info":{"doc":"Construct a new \"label attribute\",\nwhich does nothing except keep track of the names of the declarations with that attribute.\n\nUsers will generally use the `register_label_attr` macro defined below.\n","docLink":"./Lean/LabelAttribute.html#Lean.registerLabelAttr","kind":"def","line":68,"name":"Lean.registerLabelAttr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L68-L79"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.mkLabelAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">mkLabelAttr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">attrDescr</span> : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ext</span> : <a href=\"./Lean/LabelAttribute.html#Lean.LabelExtension\">LabelExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"Helper function for `registerLabelAttr`. ","docLink":"./Lean/LabelAttribute.html#Lean.mkLabelAttr","kind":"def","line":53,"name":"Lean.mkLabelAttr","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L53-L66"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.mkLabelExt\"><span class=\"name\">Lean</span>.<span class=\"name\">mkLabelExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">name</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a> := by exact decl_name%)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/LabelAttribute.html#Lean.LabelExtension\">LabelExtension</a></span></div></div>","info":{"doc":"Helper function for `registerLabelAttr`. ","docLink":"./Lean/LabelAttribute.html#Lean.mkLabelExt","kind":"def","line":45,"name":"Lean.mkLabelExt","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L45-L51"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.labelExtensionMapRef\"><span class=\"name\">Lean</span>.<span class=\"name\">labelExtensionMapRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/LabelAttribute.html#Lean.LabelExtensionMap\">LabelExtensionMap</a></span></div></div>","info":{"doc":"Store the current `LabelExtension`s. ","docLink":"./Lean/LabelAttribute.html#Lean.labelExtensionMapRef","kind":"opaque","line":42,"name":"Lean.labelExtensionMapRef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L42-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.LabelExtensionMap\"><span class=\"name\">Lean</span>.<span class=\"name\">LabelExtensionMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"The collection of all current `LabelExtension`s, indexed by name. ","docLink":"./Lean/LabelAttribute.html#Lean.LabelExtensionMap","kind":"def","line":39,"name":"Lean.LabelExtensionMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L39-L40"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LabelAttribute.html#Lean.LabelExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">LabelExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"An environment extension that just tracks an array of names. ","docLink":"./Lean/LabelAttribute.html#Lean.LabelExtension","kind":"def","line":36,"name":"Lean.LabelExtension","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/LabelAttribute.lean#L36-L37"}}],"imports":["Lean.ScopedEnvExtension","Lean.DocString","Init.Data.String.Extra","Init.Data.ToString.Name"],"instances":[],"name":"Lean.LabelAttribute"}