{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.delab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">delab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity </span><span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">measure</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> (<a href=\"./Init/Prelude.html#Lean.TSyntax\">TSyntax</a> <span class=\"fn\">`Lean.Parser.Termination.terminationBy</span>)</span></div></div>","info":{"doc":"Delaborates a `TerminationMeasure` back to a `TerminationHint`, e.g. for `termination_by?`.\n\nThis needs extra information:\n* `arity` is the value arity of the recursive function\n* `extraParams` indicates how many of the function's parameters are bound “after the colon”.\n","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.delab","kind":"def","line":102,"name":"Lean.Elab.TerminationMeasure.delab","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L102-L138"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.structuralArg\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">structuralArg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">measure</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.structuralArg","kind":"def","line":93,"name":"Lean.Elab.TerminationMeasure.structuralArg","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L93-L98"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.elab\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">elab</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">funName</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">type</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">arity </span><span class=\"fn\">extraParams</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hint</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationHint.html#Lean.Elab.TerminationBy\">TerminationBy</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a></span></div></div>","info":{"doc":"Elaborates a `TerminationBy` to an `TerminationMeasure`.\n\n* `type` is the full type of the original recursive function, including fixed prefix.\n* `hint : TerminationBy` is the syntactic `TerminationBy`.\n","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.elab","kind":"def","line":50,"name":"Lean.Elab.TerminationMeasure.elab","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L50-L91"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasures\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasures</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A complete set of `TerminationMeasure`s, as applicable to a single clique.  ","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasures","kind":"def","line":47,"name":"Lean.Elab.TerminationMeasures","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L47-L48"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.instInhabitedTerminationMeasure.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationMeasure</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.instInhabitedTerminationMeasure.default","kind":"def","line":45,"name":"Lean.Elab.instInhabitedTerminationMeasure.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.instInhabitedTerminationMeasure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedTerminationMeasure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.instInhabitedTerminationMeasure","kind":"instance","line":45,"name":"Lean.Elab.instInhabitedTerminationMeasure","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L45-L45"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.fn","kind":"def","line":44,"name":"Lean.Elab.TerminationMeasure.fn","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L44-L44"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.structural\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">structural</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.structural","kind":"def","line":43,"name":"Lean.Elab.TerminationMeasure.structural","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L43-L43"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.ref","kind":"def","line":42,"name":"Lean.Elab.TerminationMeasure.ref","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L42-L42"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">structural</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">fn</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\">TerminationMeasure</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure.mk","kind":"ctor","line":41,"name":"Lean.Elab.TerminationMeasure.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L41-L41"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">TerminationMeasure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Elaborated form for a `termination_by` clause.\n\nThe `fn` has the same (value) arity as the recursive functions (stored in\n`arity`), and maps its measures (including fixed prefix, in unpacked form) to\nthe termination measure.\n\nIf `structural := Bool`, then the `fn` is a lambda picking out exactly one measure.\n","docLink":"./Lean/Elab/PreDefinition/TerminationMeasure.html#Lean.Elab.TerminationMeasure","kind":"structure","line":32,"name":"Lean.Elab.TerminationMeasure","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/PreDefinition/TerminationMeasure.lean#L32-L45"}}],"imports":["Lean.Parser.Term","Lean.Elab.Term","Lean.Elab.Binders","Lean.Elab.SyntheticMVars","Lean.Elab.PreDefinition.TerminationHint","Lean.PrettyPrinter.Delaborator.Basic"],"instances":[{"className":"Inhabited","name":"Lean.Elab.instInhabitedTerminationMeasure","typeNames":["Lean.Elab.TerminationMeasure"]}],"name":"Lean.Elab.PreDefinition.TerminationMeasure"}