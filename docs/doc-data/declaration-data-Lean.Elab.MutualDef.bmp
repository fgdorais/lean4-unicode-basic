{"declarations":[{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Command.elabMutualDef","kind":"def","line":1426,"name":"Lean.Elab.Command.elabMutualDef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1426-L1479"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabMutualDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">vars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sc</span> : <a href=\"./Lean/Elab/Command/Scope.html#Lean.Elab.Command.Scope\">Command.Scope</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">views</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.elabMutualDef","kind":"def","line":1175,"name":"Lean.Elab.Term.elabMutualDef","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1175-L1373"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.warn.exposeOnPrivate\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">warn</span>.<span class=\"name\">exposeOnPrivate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.warn.exposeOnPrivate","kind":"opaque","line":1170,"name":"Lean.Elab.Term.warn.exposeOnPrivate","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1170-L1173"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.instTypeNameAsyncBodyInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">instTypeNameAsyncBodyInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Dynamic.html#TypeName\">TypeName</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo\">AsyncBodyInfo</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.instTypeNameAsyncBodyInfo","kind":"instance","line":1168,"name":"Lean.Elab.Term.instTypeNameAsyncBodyInfo","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1168-L1168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">AsyncBodyInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo\">AsyncBodyInfo</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo.mk","kind":"ctor","line":1167,"name":"Lean.Elab.Term.AsyncBodyInfo.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1167-L1167"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">AsyncBodyInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.AsyncBodyInfo","kind":"structure","line":1167,"name":"Lean.Elab.Term.AsyncBodyInfo","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1167-L1168"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">main</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFVars </span><span class=\"fn\">mainVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecsToLift</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>","info":{"doc":"- `sectionVars`:   The section variables used in the `mutual` block.\n- `mainHeaders`:   The elaborated header of the top-level definitions being defined by the mutual block.\n- `mainFVars`:     The auxiliary variables used to represent the top-level definitions being defined by the mutual block.\n- `mainVals`:      The elaborated value for the top-level definitions\n- `letRecsToLift`: The let-rec's definitions that need to be lifted\n","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.main","kind":"def","line":1094,"name":"Lean.Elab.Term.MutualClosure.main","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1094-L1126"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getModifiersForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","kind":"def","line":1085,"name":"Lean.Elab.Term.MutualClosure.getModifiersForLetRecs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1085-L1092"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">getKindForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">DefKind</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.getKindForLetRecs","kind":"def","line":1081,"name":"Lean.Elab.Term.MutualClosure.getKindForLetRecs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1081-L1083"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecClosures</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">kind</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefKind\">DefKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modifiers</span> : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Modifiers</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushLetRecs","kind":"def","line":1057,"name":"Lean.Elab.Term.MutualClosure.pushLetRecs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1057-L1079"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">pushMain</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">preDefs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainVals</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.TermElabM\">TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">PreDefinition</a>)</span></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.pushMain","kind":"def","line":1036,"name":"Lean.Elab.Term.MutualClosure.pushMain","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1036-L1055"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement.apply","kind":"def","line":1024,"name":"Lean.Elab.Term.MutualClosure.Replacement.apply","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1024-L1034"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.isApplicable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">isApplicable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">e</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.isApplicable","kind":"def","line":1015,"name":"Lean.Elab.Term.MutualClosure.isApplicable","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1015-L1022"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForLetRecs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecClosures</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","kind":"def","line":1011,"name":"Lean.Elab.Term.MutualClosure.insertReplacementForLetRecs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1011-L1013"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">insertReplacementForMainFns</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">r</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">sectionVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainHeaders</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">mainFVars</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\">Replacement</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","kind":"def","line":1006,"name":"Lean.Elab.Term.MutualClosure.insertReplacementForMainFns","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1006-L1008"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">Replacement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"Mapping from FVarId of mutually recursive functions being defined to \"closure\" expression. ","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.Replacement","kind":"def","line":1003,"name":"Lean.Elab.Term.MutualClosure.Replacement","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L1003-L1004"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">toLift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","kind":"def","line":947,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure.toLift","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L947-L947"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">closed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></div></div>","info":{"doc":"Expression used to replace occurrences of the let-rec `FVarId`. ","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.closed","kind":"def","line":946,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure.closed","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L946-L946"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","kind":"def","line":944,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure.localDecls","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L944-L944"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.ref","kind":"def","line":943,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure.ref","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L943-L943"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ref</span> : <a href=\"./Init/Prelude.html#Lean.Syntax\">Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">localDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">closed</span> : <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toLift</span> : <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Term.LetRecToLift\">LetRecToLift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\">LetRecClosure</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure.mk","kind":"ctor","line":942,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L942-L942"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">LetRecClosure</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.LetRecClosure","kind":"structure","line":942,"name":"Lean.Elab.Term.MutualClosure.LetRecClosure","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L942-L947"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">exprArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","kind":"def","line":877,"name":"Lean.Elab.Term.MutualClosure.ClosureState.exprArgs","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L877-L877"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLetDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","kind":"def","line":876,"name":"Lean.Elab.Term.MutualClosure.ClosureState.newLetDecls","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L876-L876"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">localDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.localDecls","kind":"def","line":875,"name":"Lean.Elab.Term.MutualClosure.ClosureState.localDecls","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L875-L875"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">newLocalDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","kind":"def","line":874,"name":"Lean.Elab.Term.MutualClosure.ClosureState.newLocalDecls","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L874-L874"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">newLocalDecls </span><span class=\"fn\">localDecls </span><span class=\"fn\">newLetDecls</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">exprArgs</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\">ClosureState</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState.mk","kind":"ctor","line":873,"name":"Lean.Elab.Term.MutualClosure.ClosureState.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L873-L873"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">ClosureState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.ClosureState","kind":"structure","line":873,"name":"Lean.Elab.Term.MutualClosure.ClosureState","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L873-L877"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FreeVarMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FreeVarMap","kind":"def","line":853,"name":"Lean.Elab.Term.MutualClosure.FreeVarMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L853-L853"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">letRecFVarIds</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usedFVarsMap</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.run","kind":"def","line":847,"name":"Lean.Elab.Term.MutualClosure.FixPoint.run","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L847-L849"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.M","kind":"def","line":805,"name":"Lean.Elab.Term.MutualClosure.FixPoint.M","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L805-L805"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">modified</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.modified","kind":"def","line":803,"name":"Lean.Elab.Term.MutualClosure.FixPoint.State.modified","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L803-L803"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">usedFVarsMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","kind":"def","line":802,"name":"Lean.Elab.Term.MutualClosure.FixPoint.State.usedFVarsMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L802-L802"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">usedFVarsMap</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\">UsedFVarsMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">modified</span> : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\">State</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State.mk","kind":"ctor","line":801,"name":"Lean.Elab.Term.MutualClosure.FixPoint.State.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L801-L801"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">FixPoint</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.FixPoint.State","kind":"structure","line":801,"name":"Lean.Elab.Term.MutualClosure.FixPoint.State","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L801-L803"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">MutualClosure</span>.<span class=\"name\">UsedFVarsMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"A mapping from FVarId to Set of FVarIds. ","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.MutualClosure.UsedFVarsMap","kind":"def","line":700,"name":"Lean.Elab.Term.MutualClosure.UsedFVarsMap","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L700-L701"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.debug.proofAsSorry\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">debug</span>.<span class=\"name\">proofAsSorry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.debug.proofAsSorry","kind":"opaque","line":492,"name":"Lean.Elab.Term.debug.proofAsSorry","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L492-L496"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.linter.unusedSectionVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">linter</span>.<span class=\"name\">unusedSectionVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.linter.unusedSectionVars","kind":"opaque","line":487,"name":"Lean.Elab.Term.linter.unusedSectionVars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L487-L490"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.deprecated.oldSectionVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">deprecated</span>.<span class=\"name\">oldSectionVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.deprecated.oldSectionVars","kind":"opaque","line":482,"name":"Lean.Elab.Term.deprecated.oldSectionVars","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L482-L485"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.Term.failedToInferDefTypeErrorName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">failedToInferDefTypeErrorName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Name</a></div></div>","info":{"doc":"The error name for \"failed to infer definition type\" errors.\n\nWe cannot use `logNamedError` here because the error is logged later, after attempting to synthesize\nmetavariables, in `logUnassignedUsingErrorInfos`.\n","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.Term.failedToInferDefTypeErrorName","kind":"def","line":126,"name":"Lean.Elab.Term.failedToInferDefTypeErrorName","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L126-L132"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefViewElabHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></span></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader","kind":"instance","line":83,"name":"Lean.Elab.instInhabitedDefViewElabHeader","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">instInhabitedDefViewElabHeader</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.instInhabitedDefViewElabHeader.default","kind":"def","line":83,"name":"Lean.Elab.instInhabitedDefViewElabHeader.default","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L83-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">bodySnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">BodyProcessedSnapshot</a>)</span>)</span></span></div></div>","info":{"doc":"Snapshot for incremental processing of definition body.\n\nInvariant: if the bundle's `old?` is set, then elaboration of the body is guaranteed to result in\nthe same elaboration result and state, i.e. reuse is possible.\n","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.bodySnap?","kind":"def","line":82,"name":"Lean.Elab.DefViewElabHeader.bodySnap?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L82-L82"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">tacSnap?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Tactic.TacticParsedSnapshot</a>)</span></span></div></div>","info":{"doc":"Snapshot for incremental processing of top-level tactic block, if any.\n\nInvariant: if the bundle's `old?` is set, then the state *up to the start* of the tactic block is\nunchanged, i.e. reuse is possible.\n","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.tacSnap?","kind":"def","line":75,"name":"Lean.Elab.DefViewElabHeader.tacSnap?","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L75-L75"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDefView</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">toDefViewElabHeaderData</span> : <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">DefViewElabHeaderData</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">tacSnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <a href=\"./Lean/Elab/Term/TermElabM.html#Lean.Elab.Tactic.TacticParsedSnapshot\">Tactic.TacticParsedSnapshot</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">bodySnap?</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Language/Basic.html#Lean.Language.SnapshotBundle\">Language.SnapshotBundle</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.BodyProcessedSnapshot\">BodyProcessedSnapshot</a>)</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.mk","kind":"ctor","line":68,"name":"Lean.Elab.DefViewElabHeader.mk","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L68-L68"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">toDefViewElabHeaderData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">DefViewElabHeaderData</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData","kind":"def","line":68,"name":"Lean.Elab.DefViewElabHeader.toDefViewElabHeaderData","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L68-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefView\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span>.<span class=\"name\">toDefView</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">self</span> : <a href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\">DefViewElabHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">DefView</a></div></div>","info":{"doc":"","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader.toDefView","kind":"def","line":68,"name":"Lean.Elab.DefViewElabHeader.toDefView","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L68-L83"}},{"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">DefViewElabHeader</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefView\">Lean.Elab.DefView</a>, <a href=\"./Lean/Elab/DefView.html#Lean.Elab.DefViewElabHeaderData\">Lean.Elab.DefViewElabHeaderData</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>","info":{"doc":"`DefView` plus header elaboration data and snapshot. ","docLink":"./Lean/Elab/MutualDef.html#Lean.Elab.DefViewElabHeader","kind":"structure","line":67,"name":"Lean.Elab.DefViewElabHeader","sourceLink":"https://github.com/leanprover/lean4/blob/797c613eb9b6d4ec95db23e3e00af9ac6657f24b/src/Lean/Elab/MutualDef.lean#L67-L83"}}],"imports":["Lean.Parser.Term","Lean.Meta.Closure","Lean.Meta.Check","Lean.Meta.Transform","Lean.PrettyPrinter.Delaborator.Options","Lean.Elab.Command","Lean.Elab.Match","Lean.Elab.DefView","Lean.Elab.Deriving.Basic","Lean.Elab.PreDefinition.Main","Lean.Elab.PreDefinition.TerminationHint","Lean.Elab.DeclarationRange","Lean.Elab.WhereFinally"],"instances":[{"className":"Inhabited","name":"Lean.Elab.instInhabitedDefViewElabHeader","typeNames":["Lean.Elab.DefViewElabHeader"]},{"className":"TypeName","name":"Lean.Elab.Term.instTypeNameAsyncBodyInfo","typeNames":["Lean.Elab.Term.AsyncBodyInfo"]}],"name":"Lean.Elab.MutualDef"}